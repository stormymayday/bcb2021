[{"/Users/aidar/Desktop/projects/bcbreact/src/index.js":"1","/Users/aidar/Desktop/projects/bcbreact/src/reportWebVitals.js":"2","/Users/aidar/Desktop/projects/bcbreact/src/App.js":"3","/Users/aidar/Desktop/projects/bcbreact/src/components/Navigation.js":"4","/Users/aidar/Desktop/projects/bcbreact/src/components/ProcessingExport.js":"5","/Users/aidar/Desktop/projects/bcbreact/src/components/Hero.js":"6","/Users/aidar/Desktop/projects/bcbreact/src/components/Farming.js":"7","/Users/aidar/Desktop/projects/bcbreact/src/components/Slider.js":"8","/Users/aidar/Desktop/projects/bcbreact/src/components/Journey.js":"9","/Users/aidar/Desktop/projects/bcbreact/src/components/Roasting.js":"10","/Users/aidar/Desktop/projects/bcbreact/src/components/EconomicsAndTransparency.js":"11","/Users/aidar/Desktop/projects/bcb2021/src/index.js":"12","/Users/aidar/Desktop/projects/bcb2021/src/reportWebVitals.js":"13","/Users/aidar/Desktop/projects/bcb2021/src/App.js":"14","/Users/aidar/Desktop/projects/bcb2021/src/components/Hero.js":"15","/Users/aidar/Desktop/projects/bcb2021/src/components/Farming.js":"16","/Users/aidar/Desktop/projects/bcb2021/src/components/EconomicsAndTransparency.js":"17","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingExport.js":"18","/Users/aidar/Desktop/projects/bcb2021/src/components/Roasting.js":"19","/Users/aidar/Desktop/projects/bcb2021/src/components/Journey.js":"20","/Users/aidar/Desktop/projects/bcb2021/src/components/Slider.js":"21","/Users/aidar/Desktop/projects/bcb2021/src/components/Farmers.js":"22","/Users/aidar/Desktop/projects/bcb2021/src/components/FarmerList/FarmerList.js":"23","/Users/aidar/Desktop/projects/bcb2021/src/components/FarmerCard/FarmerCard.js":"24","/Users/aidar/Desktop/projects/bcb2021/src/pages/Home.js":"25","/Users/aidar/Desktop/projects/bcb2021/src/pages/FarmerDetails.js":"26","/Users/aidar/Desktop/projects/bcb2021/src/pages/Error.js":"27","/Users/aidar/Desktop/projects/bcb2021/src/components/SearchForm/SearchForm.js":"28","/Users/aidar/Desktop/projects/bcb2021/src/context.js":"29","/Users/aidar/Desktop/projects/bcb2021/src/components/Loading/Loading.js":"30","/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestList/HarvestList.js":"31","/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestCard/HarvestCard.js":"32","/Users/aidar/Desktop/projects/bcb2021/src/components/Pagination/Pagination.js":"33","/Users/aidar/Desktop/projects/bcb2021/src/components/Pagination/Pagination.styles.jsx":"34","/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestLotCard/HarvestLotCard.js":"35","/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestLotCard/HarvestLotCard.styles.jsx":"36","/Users/aidar/Desktop/projects/bcb2021/src/utils.js":"37","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSection/ProcessingSection.js":"38","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSectionPagination/ProcessingSectionPagination.js":"39","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSectionPagination/ProcessingSectionPagination.styles.jsx":"40","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingLotCard/ProcessingLotCard.js":"41","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingLotCard/ProcessingLotCard.styles.jsx":"42","/Users/aidar/Desktop/projects/bcb2021/src/components/LeafletMap/LeafletMap.js":"43","/Users/aidar/Desktop/projects/bcb2021/src/components/HomePageNavigation/HomePageNavigation.js":"44","/Users/aidar/Desktop/projects/bcb2021/src/components/DetailsPageNavigation/DetailsPageNavigation.js":"45"},{"size":500,"mtime":1612929284764,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1608235489708,"results":"48","hashOfConfig":"47"},{"size":27178,"mtime":1613688218568,"results":"49","hashOfConfig":"47"},{"size":1230,"mtime":1612994236503,"results":"50","hashOfConfig":"47"},{"size":6109,"mtime":1613685280073,"results":"51","hashOfConfig":"47"},{"size":285,"mtime":1608263879415,"results":"52","hashOfConfig":"47"},{"size":5050,"mtime":1613685589972,"results":"53","hashOfConfig":"47"},{"size":1941,"mtime":1608263014707,"results":"54","hashOfConfig":"47"},{"size":3168,"mtime":1613687381362,"results":"55","hashOfConfig":"47"},{"size":2483,"mtime":1613688321935,"results":"56","hashOfConfig":"47"},{"size":3679,"mtime":1612994221201,"results":"57","hashOfConfig":"47"},{"size":694,"mtime":1614314290868,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":1613688395000,"results":"60","hashOfConfig":"59"},{"size":29595,"mtime":1614906788663,"results":"61","hashOfConfig":"59"},{"size":285,"mtime":1613688395000,"results":"62","hashOfConfig":"59"},{"size":5043,"mtime":1614698463531,"results":"63","hashOfConfig":"59"},{"size":3679,"mtime":1613688395000,"results":"64","hashOfConfig":"59"},{"size":6109,"mtime":1613688395000,"results":"65","hashOfConfig":"59"},{"size":2483,"mtime":1613688395000,"results":"66","hashOfConfig":"59"},{"size":3168,"mtime":1613688395000,"results":"67","hashOfConfig":"59"},{"size":1941,"mtime":1613688395000,"results":"68","hashOfConfig":"59"},{"size":1222,"mtime":1614286040467,"results":"69","hashOfConfig":"59"},{"size":1228,"mtime":1614906348273,"results":"70","hashOfConfig":"59"},{"size":1427,"mtime":1614906904927,"results":"71","hashOfConfig":"59"},{"size":502,"mtime":1614896905364,"results":"72","hashOfConfig":"59"},{"size":11049,"mtime":1614908061617,"results":"73","hashOfConfig":"59"},{"size":427,"mtime":1614300168123,"results":"74","hashOfConfig":"59"},{"size":310,"mtime":1614302748131,"results":"75","hashOfConfig":"59"},{"size":10255,"mtime":1614906992755,"results":"76","hashOfConfig":"59"},{"size":144,"mtime":1614302948047,"results":"77","hashOfConfig":"59"},{"size":821,"mtime":1614702870338,"results":"78","hashOfConfig":"59"},{"size":1898,"mtime":1614908019427,"results":"79","hashOfConfig":"59"},{"size":4585,"mtime":1614899458310,"results":"80","hashOfConfig":"59"},{"size":1024,"mtime":1614794161418,"results":"81","hashOfConfig":"59"},{"size":1468,"mtime":1614908025021,"results":"82","hashOfConfig":"59"},{"size":878,"mtime":1614748236329,"results":"83","hashOfConfig":"59"},{"size":352,"mtime":1614803529583,"results":"84","hashOfConfig":"59"},{"size":1298,"mtime":1614821970286,"results":"85","hashOfConfig":"59"},{"size":3793,"mtime":1614899475618,"results":"86","hashOfConfig":"59"},{"size":1024,"mtime":1614820814567,"results":"87","hashOfConfig":"59"},{"size":1341,"mtime":1614908039529,"results":"88","hashOfConfig":"59"},{"size":878,"mtime":1614821102102,"results":"89","hashOfConfig":"59"},{"size":1670,"mtime":1614908033557,"results":"90","hashOfConfig":"59"},{"size":1238,"mtime":1614896863443,"results":"91","hashOfConfig":"59"},{"size":1920,"mtime":1614904275076,"results":"92","hashOfConfig":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"9gqvg0",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},"17riex8",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":77,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},"/Users/aidar/Desktop/projects/bcbreact/src/index.js",[],["206","207"],"/Users/aidar/Desktop/projects/bcbreact/src/reportWebVitals.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/App.js",["208","209","210"],"/Users/aidar/Desktop/projects/bcbreact/src/components/Navigation.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/components/ProcessingExport.js",["211","212"],"import React, { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport Button from 'react-bootstrap/Button';\n\nimport './ProcessingExport.css';\n\n\nexport const ProcessingExport = (props) => {\n\n    // Converting Intake Image\n    // const catrachaIntakeImage = 'data:image/jpg;base64,' + props.catrachaIntakeImage;\n\n    // Converting Milling Video\n    // const millingVideo = 'data:video/mp4;base64,' + props.millingVideo;\n\n    // Converting Milling Image\n    // const millingImage = 'data:image/jpg;base64,' + props.millingImage;\n\n    const [totalIntakeWeight, setTotalIntakeWeight] = useState('fetching data from BEXT');\n\n    const [intakeDates, setIntakeDates] = useState('fetching data from BEXT');\n\n    const [paymentsTotal, setPaymentsTotal] = useState('fetching data from BEXT');\n\n    Object.keys(props.lotHistory).forEach(async function (key) {\n\n        if (props.lotHistory[key].nodeId === '01b66b57-c0a0-481c-abb0-57be005096da') {\n\n            // Getting the lotIDs Array\n            const lotIDs = props.lotHistory[key].lotIds;\n\n            // console.log(lotIDs);\n\n            // Placeholder object\n            const lotData = {};\n\n            // Weights array\n            const weights = [];\n\n            // Money array\n            const payments = [];\n\n            // Dates array\n            const intakeDates = [];\n\n            for (let i = 0; i < lotIDs.length; i++) {\n                // API call and object assignment\n                Object.assign(lotData,\n                    await fetch(`${process.env.REACT_APP_GET_LOT}/${lotIDs[i]}`, {\n                        method: 'GET',\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n                        }\n                    }).then(res => res.json()));\n\n                // Getting Current Weight in integer format\n                weights[i] = parseInt(lotData.currentWeight);\n\n                // Placing Transaction Date value into a string variable\n                const str = lotData.customData['TransactionDate.MeasureTime'].dateTimeValue;\n\n\n                // Slicing off first 10 characters\n                const intakeDate = str.slice(0, 10);\n\n\n                // Capturing Intake Date into the array\n                intakeDates[i] = intakeDate;\n\n                // Capturing TotalValue.Measure into the array\n                payments[i] = parseInt(lotData.customData[\"TotalValue.Measure\"].value);\n\n            }\n\n            // Getting the sum of weights\n            const sumOfWeights = weights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Getting the sum of payments\n            const sumOfPayments = payments.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Sorting the Dates Array\n            intakeDates.sort();\n\n            // Testing\n            // console.log(`${sumOfWeights}, ${(sumOfPayments / 24.5).toFixed(2)}, ${intakeDates}`);\n\n            setTotalIntakeWeight(`${sumOfWeights} Lbs from ${weights.length} separate intakes`);\n\n            setIntakeDates(`${intakeDates[0]} and ${intakeDates[intakeDates.length - 1]}`);\n\n            setPaymentsTotal(`${(sumOfPayments / 24.5).toFixed(2)} USD`);\n        }\n\n    });\n\n    return (\n        <div className=\"processing-section-bg\" style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='processing-export'>\n            <Container>\n\n                <h2 style={{ color: 'white' }}>Processed and Exported by Catracha Coffee</h2>\n                <p style={{ color: 'white' }}>A social enterprise dedicated to accessing the specialty coffee market for coffee farmers in Santa Elena, La Paz, Honduras.</p>\n                <Row>\n                    <Col lg={3} md={6} sm={12}>\n                        <Button variant=\"outline-light\" size=\"lg\" block style={{ 'margin-bottom': '2rem' }}>LEARN MORE</Button>\n                    </Col>\n                </Row>\n\n                <Row>\n\n                    <Col lg>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Catracha Intake Parchment</Card.Title>\n                                <Card.Text>\n                                    Total Intake Weight: {totalIntakeWeight}<br />\n                                    Intake Dates between: {intakeDates}<br />\n                                    Payments total: {paymentsTotal}<br />\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Img variant=\"top\" src={props.catrachaIntakeImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                    <Col lg>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent' }}>\n                            <Card.Body>\n                                <Card.Title>Milling</Card.Title>\n                                <Card.Text>\n                                    Milled on: {props.milledOnDate}<br />\n                                    Miller: {props.miller}<br />\n                                    Location: {props.millingLocation}<br />\n                                    Lot Current Weight: {props.lotCurrentWeight}\n                                </Card.Text>\n                            </Card.Body>\n                            <video style={{ 'max-height': '40rem' }} src={props.millingVideo} controls></video>\n                            <Card.Img variant=\"top\" src={props.millingImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                </Row>\n\n            </Container>\n        </div>\n    );\n}\n\nexport default ProcessingExport;","/Users/aidar/Desktop/projects/bcbreact/src/components/Hero.js",["213"],"import React from 'react';\n\n// Bootstrap components\nimport Container from 'react-bootstrap/Container';\n\nimport Slider from './Slider';\n\nexport const Hero = () => {\n    return (\n        <div id='hero'>\n\n                <Slider id='hero' />\n\n        </div>\n    );\n}\n\nexport default Hero;","/Users/aidar/Desktop/projects/bcbreact/src/components/Farming.js",["214"],"import React, { useEffect, useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nexport const Farming = (props) => {\n\n    // Render Test\n    // console.log('Hello from farming');\n\n    const [totalAbsorbedWeight, setTotalAbsorbedWeight] = useState('fetching data from BEXT');\n\n    const [totalDePulpedWeight, setTotalDePulpedWeight] = useState('fetching data from BEXT');\n\n    const [dePulpedDates, setdePulpedDates] = useState('fetching data from BEXT');\n\n    // Placeholder object\n    const lotData = {};\n\n    // Absorbed Weights array\n    const absorbedWeights = [];\n\n    // De-pupled Weights array\n    const dePupledWeights = [];\n\n    // De-pluped Dates array\n    const dePupledDates = [];\n\n    let sumOfAbsorbedWeights;\n\n    let sumOfDePupledWeights;\n\n    Object.keys(props.lotHistory).forEach(async function (key) {\n\n        if (props.lotHistory[key].nodeId === '0270eada-dbb8-45dc-a38d-cffc166d87ea') {\n\n            // Getting the lotIDs Array\n            const lotIDs = props.lotHistory[key].lotIds;\n\n            // console.log(lotIDs);\n\n            for (let i = 0; i < lotIDs.length; i++) {\n                // API call and object assignment\n                Object.assign(lotData,\n                    await fetch(`${process.env.REACT_APP_GET_LOT}/${lotIDs[i]}`, {\n                        method: 'GET',\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n                        }\n                    }).then(res => res.json()));\n\n                // Getting Absorbed Weight in integer format\n                absorbedWeights[i] = parseInt(lotData.absorbedWeight);\n\n                // Getting De-Pupled Weight in integer format\n                dePupledWeights[i] = parseInt(lotData.currentWeight);\n\n                // Capturing De-Pupled Date into the array\n                dePupledDates[i] = lotData.customData['De-PulpingDate.MeasureTime'].dateTimeValue;\n            }\n\n            // Getting the sum of Absorbed Weights\n            sumOfAbsorbedWeights = absorbedWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Getting the sum of De-Pupled Weight Weights\n            sumOfDePupledWeights = dePupledWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Sorting the De-Pupled Dates Array\n            dePupledDates.sort();\n\n            // Testing\n            // console.log(sumOfAbsorbedWeights, sumOfDePupledWeights, dePupledDates[0], dePupledDates[dePupledDates.length - 1]);\n\n            setTotalAbsorbedWeight(`${sumOfAbsorbedWeights} Lbs`);\n\n            setTotalDePulpedWeight(`${sumOfDePupledWeights} Lbs`);\n\n            setdePulpedDates(`${dePupledDates[0]} and ${dePupledDates[dePupledDates.length - 1]}`);\n\n        }\n\n    });\n\n    return (\n        <div style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='farming'>\n            <Container>\n\n                <h2 style={{ 'margin-bottom': '3rem' }}>Grown, Picked, and Processed by Claudia & Juan</h2>\n\n                <Row>\n\n                    <Col md>\n\n                        <Card border=\"dark\" style={{ 'margin-bottom': '2rem' }}>\n\n                            {/* <Card.Img variant=\"top\" src={slideOne} style={{ 'height': '20rem' }} /> */}\n                            <Card.Body>\n                                <Card.Title>Farmer Harvest</Card.Title>\n                                <Card.Text>\n                                    Picked by: {props.pickedBy}<br />\n                                    Picked Cherries Weight: {props.pickedCherriesWeight}<br />\n                                    Date picked: {props.datePicked}<br />\n                                    Variety: {props.variety}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Img variant=\"top\" src={props.pickerImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                    <Col md>\n\n                        <Card border=\"dark\">\n                            <Card.Body>\n                                <Card.Title>Farmer De-Pulping</Card.Title>\n                                <Card.Text>\n                                    Total Absorbed Weight: {totalAbsorbedWeight}<br />\n                                    Total De-pulped Weight: {totalDePulpedWeight}<br />\n                                    De-pulped between: {dePulpedDates}\n                                </Card.Text>\n                            </Card.Body>\n                            <video style={{ 'height': '20rem' }} src={props.dePulpingVideo} controls></video>\n                        </Card>\n                    </Col>\n\n                </Row>\n\n            </Container>\n        </div >\n    );\n}\n\nexport default Farming;","/Users/aidar/Desktop/projects/bcbreact/src/components/Slider.js",["215","216"],"import React from 'react';\nimport './Slider.css';\n\n// Bootstrap components\nimport Carousel from 'react-bootstrap/Carousel'\n\n// Images\nimport slideOne from '../images/slideOne.jpg';\nimport slideTwo from '../images/slideTwo.jpg';\n\nexport default function Slider() {\n    // style={{'height': '100vh'}}\n\n    // className=\"d-block w-100\"\n    return(\n        <>\n            <Carousel>\n\n                <Carousel.Item interval={1000} >\n                    <div className='slide1' />\n                    <Carousel.Caption>\n                        <h3>Your coffee might be opaque, but how it got to you should be transparent</h3>\n                        <p>Thank you for being a coffee pioneer! You are one of the first who have this level of visibility at the wave of your hand. The link that took you here is tied to a specific batch of roasted coffee, and you can see some highlights of its origin and how it got to you, recorded using blockchain technology.</p>\n\n                        <p>We invite you to explore this site and share your feedback in the form below.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n\n                <Carousel.Item interval={500} >\n                <div className='slide2' />\n                    <Carousel.Caption>\n                        <h3>Your coffee might be opaque, but how it got to you should be transparent</h3>\n                        <p>Thank you for being a coffee pioneer! You are one of the first who have this level of visibility at the wave of your hand. The link that took you here is tied to a specific batch of roasted coffee, and you can see some highlights of its origin and how it got to you, recorded using blockchain technology.</p>\n\n                        <p>We invite you to explore this site and share your feedback in the form below.</p>\n                    </Carousel.Caption>\n                </Carousel.Item>\n\n            </Carousel>\n        </>\n    );\n}","/Users/aidar/Desktop/projects/bcbreact/src/components/Journey.js",[],"/Users/aidar/Desktop/projects/bcbreact/src/components/Roasting.js",["217","218","219","220","221","222"],"/Users/aidar/Desktop/projects/bcbreact/src/components/EconomicsAndTransparency.js",["223","224","225","226","227","228"],"// EconomicsAndTransparency\nimport React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport Button from 'react-bootstrap/Button';\n\nimport slideOne from '../images/slideOne.jpg';\nimport slideTwo from '../images/slideTwo.jpg';\n\nimport './EconomicsAndTransparency.css';\n\n\nexport const EconomicsAndTransparency = () => {\n    return (\n        <div className=\"economics-section-bg\" style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='economics'>\n            <Container>\n\n                <h2 style={{ color: 'white' }}>Economics & Transparency</h2>\n                <p style={{ color: 'white' }}>Technology can revolutionize the way coffee growers sell their product by authenticating direct trade claims, tracking supply chain activities and facilitating economic transparency. And research shows this yields increased profits, feedback and capital access for global producers. Below, stakeholders share economic data for financial transparency.</p>\n\n                <Row>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Claudia & Juan</Card.Title>\n                                <Card.Text>\n                                    Paid for Parchment: $744.20<br />\n                                Profit Share: $708.20<br />\n                                Total Payment: $1452.40<br />\n                                Total Payment Price: $1.911/lb green exported\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Title>Catracha</Card.Title>\n                                <Card.Text>\n                                    FOB base: $2.25/lb*<br />\n                                FOB premium: $1.25/lb*<br />\n                                FOB Catracha Community contribution: $0.25/lb*<br />\n                                FOB total: $3.75/lb*<br />\n                                * of exported green coffee\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                    <Col lg={4} sm={12}>\n\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent' }}>\n                            <Card.Body>\n                                <Card.Title>Queen City</Card.Title>\n                                <Card.Text>\n                                    QC FOB: $3.75/lb<br />\n                                QC import cost: $0.65/lb ($4.40/lb paid to Importer)<br />\n                                QC freight: $0.15/lb<br />\n                                QC roasting labor: $0.52/lb<br />\n                                QC total cost at roaster: $5.62/lb†<br />\n                                † cost prior to packaging & distribution\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n        </div>\n    );\n}\n\nexport default EconomicsAndTransparency;","/Users/aidar/Desktop/projects/bcb2021/src/index.js",["229","230"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppProvider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["231","232"],"/Users/aidar/Desktop/projects/bcb2021/src/reportWebVitals.js",[],["233","234"],"/Users/aidar/Desktop/projects/bcb2021/src/App.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { useEffect, useState } from 'react';\n\n// Google Analytics\nimport ReactGA from 'react-ga';\n\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Router\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Pages\nimport Home from './pages/Home';\nimport FarmerDetails from './pages/FarmerDetails';\nimport Error from './pages/Error';\n\n// Components\nimport Navigation from './components/HomePageNavigation/HomePageNavigation';\nimport Hero from './components/Hero';\nimport Farmers from './components/Farmers';\nimport FarmerList from './components/FarmerList/FarmerList';\nimport Farming from './components/Farming';\nimport ProcessingExport from './components/ProcessingExport';\nimport Journey from './components/Journey';\nimport Roasting from './components/Roasting';\nimport EconomicsAndTransparency from './components/EconomicsAndTransparency';\n\n\nconst App = () => {\n\n  // Lot History State (for Farming & Processing Sections)\n  const [lotHistory, setLotHistory] = useState('fetching data from BEXT');\n\n  // Farming Section State\n  const [pickedBy, setPickedBy] = useState('fetching data from BEXT');\n  const [pickedCherriesWeight, setPickedCherriesWeight] = useState('fetching data from BEXT');\n  const [datePicked, setDatePicked] = useState('fetching data from BEXT');\n  const [variety, setVariety] = useState('fetching data from BEXT');\n  const [pickerImage, setPickerImage] = useState('fetching data from BEXT');\n  const [dePulpingVideo, setDePulpingVideo] = useState('fetching data from BEXT');\n\n  // Processing & Export Section State\n  const [catrachaIntakeImage, setSatrachaIntakeImage] = useState('fetching data from BEXT');\n  const [milledOnDate, setMilledOnDate] = useState('fetching data from BEXT');\n  const [miller, setMiller] = useState('fetching data from BEXT');\n  const [lotCurrentWeight, setLotCurrentWeight] = useState('fetching data from BEXT');\n  const [millingLocation, setMillingLocation] = useState('fetching data from BEXT');\n  const [millingVideo, setMillingVideo] = useState('fetching data from BEXT');\n  const [millingImage, setMillingImage] = useState('fetching data from BEXT');\n\n  // Journey Highlights Section State\n  // Green Export\n  const [exportedFrom, setExportedFrom] = useState('fetching data from BEXT');\n  const [greenExportDate, setGreenExportDate] = useState('fetching data from BEXT');\n  const [greenExportWeight, setGreenExportWeight] = useState('fetching data from BEXT');\n  const [greenExportVideo, setGreenExportVideo] = useState('fetching data from BEXT');\n  // Green Import\n  const [greenImportLocation, setGreenImportLocation] = useState('fetching data from BEXT');\n  const [greenImportDate, setGreenImportDate] = useState('fetching data from BEXT');\n  const [greenImportImage, setGreenImportImage] = useState('fetching data from BEXT');\n  // Green Intake\n  const [intakeGreenLocation, setIntakeGreenLocation] = useState('fetching data from BEXT');\n  const [intakeGreenDate, setIntakeGreenDate] = useState('fetching data from BEXT');\n  const [intakeGreenWeight, setIntakeGreenWeight] = useState('fetching data from BEXT');\n  const [intakeGreenCollector, setIntakeGreenCollector] = useState('fetching data from BEXT');\n  const [intakeGreenVideo, setIntakeGreenVideo] = useState('fetching data from BEXT');\n\n  // Roasting State\n  const [roastingCounty, setRoastingCounty] = useState('fetching data from BEXT');\n  const [roastingState, setRoastingState] = useState('fetching data from BEXT');\n  const [roastingCity, setRoastingCity] = useState('fetching data from BEXT');\n  const [cuppersNotes, setCuppersNotes] = useState('fetching data from BEXT');\n  const [roastDate, setRoastDate] = useState('fetching data from BEXT');\n  const [roasterName, setRoasterName] = useState('fetching data from BEXT');\n  const [roastingImage, setRoastingImage] = useState('fetching data from BEXT');\n\n  useEffect(() => {\n\n    // // Render test\n    // console.log('Hello From App.js');\n\n    // // Google Analytics initiazation\n    // ReactGA.initialize(`${process.env.REACT_APP_GA_ID}`);\n\n    // // Page View Report\n    // ReactGA.pageview('/');\n\n    // // Dev Test getNode\n    // fetch(`https://bext360api.azure-api.net/retaildev/v1/getnode/a4c8bf16-7c5b-44d9-a25b-2635bc9d803e`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': ``\n    //   }\n    // }).then(res => {\n    //   return res.json();\n    // })\n    //   .then(json => {\n    //     setDevTestgetNode(json.nodeId);\n    //   });\n\n    // // Getting all the nodes\n    // fetch(`https://bext360api.azure-api.net/retaildev/v1/getnodes`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': ``\n    //   }\n    // }).then(res => {\n    //   return res.json();\n    // })\n    //   .then(json => {\n    //     setFarmers([\n    //       ...json,\n    //       {\n    //         id: json.nodeId,\n    //       }\n    //     ]);\n    //     // setFarmers(json => [...json]);\n    //     // setResult(result => [...result, response]);\n    //   });\n\n    // // Lot History Call\n    // fetch(`${process.env.REACT_APP_GET_LOT_HISTORY}/a58fc3bf-94fd-4f0f-bd37-0947d8ba4146`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => {\n    //   return res.json();\n    // })\n    //   .then(json => {\n    //     setLotHistory(json);\n    //   });\n\n    // // Farming Section Call\n    // fetch(`${process.env.REACT_APP_GET_LOT}/5c955a2e-90ef-6bf4-fa8a-1813ee5d4687`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setPickedBy(json.customData['FarmerName.Measure'].value);\n    //     setPickedCherriesWeight(json.customData['TotalValue.Measure'].value + ' lbs');\n    //     setDatePicked(json.customData['HarvestDate.MeasureTime'].dateTimeValue);\n    //     setVariety(json.customData['Varietal.Measure'].value);\n    //     setPickerImage(json.customData['LotFarmerProductImage.Measure'].value);\n\n    //   });\n    // // Farming Section - Video Call\n    // fetch(`${process.env.REACT_APP_GET_VIDEO}/df5e4e96-5133-4c85-ad5f-032d65182723`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setDePulpingVideo('data:video/mp4;base64,' + json);\n    //   });\n    // // Farming Calls End\n\n    // // Processing & Export Calls\n    // // Catracha Intake Parchment - Image\n    // fetch(`${process.env.REACT_APP_GET_IMAGE}/2d79f311-eb5f-4a4a-96b8-ec9adfca1617`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setSatrachaIntakeImage('data:image/jpg;base64,' + json);\n    //   });\n    // // Milling Calls - date, miller, weight\n    // fetch(`${process.env.REACT_APP_GET_LOT}/b0c1846f-8cef-410e-a2ec-f6d9f3843e9f`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setMilledOnDate(json.customData['MillingDate.MeasureTime'].dateTimeValue.split('T')[0]);\n    //     setMiller(json.customData['FarmerName.Measure'].value);\n    //     setLotCurrentWeight(json.currentWeight + ' lbs');\n\n    //   });\n    // // Milling Location\n    // fetch(`${process.env.REACT_APP_GET_NODE}/8a14226b-873b-4893-bedc-a9699dc28472`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json()).then(json => {\n\n    //   setMillingLocation(`${json.defaultLocation.city}, ${json.defaultLocation\n    //     .state}, ${json.defaultLocation.country}`);\n\n    // });\n    // // Milling Video\n    // fetch(`${process.env.REACT_APP_GET_VIDEO}/5b80c8dc-1dac-4eaf-8674-75052d83d0c5`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setMillingVideo('data:video/mp4;base64,' + json);\n\n    //   });\n    // // Milling Image\n    // fetch(`${process.env.REACT_APP_GET_IMAGE}/14d5be6c-8f0e-48dd-88ca-46a1958a2fcf`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setMillingImage('data:image/jpg;base64,' + json);\n\n    //   });\n    // // Processing & Export Calls End\n\n    // // Journey Calls\n    // // Green Export - Exported From\n    // fetch(`${process.env.REACT_APP_GET_NODE}/c51f7616-5fb6-4416-be83-c98dc0d25df1`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json()).then(json => {\n\n    //   setExportedFrom(`${json.defaultLocation.city}, ${json.defaultLocation\n    //     .state}, ${json.defaultLocation.country}`);\n\n    // });\n    // // Green Export - Date & Weight\n    // fetch(`${process.env.REACT_APP_GET_LOT}/f1222ba7-0c10-4abf-b49f-c197be1ec8e1`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setGreenExportDate(`${json.customData['ExportDate.MeasureTime'].dateTimeValue.split('T')[0]}`);\n    //     setGreenExportWeight(` ${json.absorbedWeight} Lbs`);\n\n    //   });\n    // // Green Export - Video\n    // fetch(`${process.env.REACT_APP_GET_VIDEO}/c8bf9e23-1ae9-4422-8e00-984566d5663a`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setGreenExportVideo('data:video/mp4;base64,' + json);\n    //   });\n    // // Green Import - Imported At\n    // fetch(`${process.env.REACT_APP_GET_NODE}/b2d1d8b3-498b-424e-87df-3050aa237115`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json()).then(json => {\n\n    //   setGreenImportLocation(`${json.defaultLocation.city}, ${json.defaultLocation\n    //     .state}, ${json.defaultLocation.country}`);\n\n    // });\n    // // Green Import - Date\n    // fetch(`${process.env.REACT_APP_GET_LOT}/8f43a6a8-52aa-45d6-9bba-cbf8f823037d`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setGreenImportDate(`${json.customData['ImportDate.MeasureTime'].dateTimeValue.split('T')[0]}`);\n    //   });\n    // // Green Import - Image\n    // fetch(`${process.env.REACT_APP_GET_IMAGE}/4aa16929-f043-4520-809d-d1f62cfb106d`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setGreenImportImage('data:image/jpg;base64,' + json);\n    //   });\n    // // CIntake Green - Roaster Received in\n    // fetch(`${process.env.REACT_APP_GET_NODE}/1dc41db1-f7b5-45f1-8810-432e6be023cb`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json()).then(json => {\n    //   setIntakeGreenLocation(`${json.defaultLocation.city}, ${json.defaultLocation.state}, ${json.defaultLocation.country}`);\n    // });\n    // // Intake Green - Date, Weight, & Received by\n    // fetch(`${process.env.REACT_APP_GET_LOT}/a58fc3bf-94fd-4f0f-bd37-0947d8ba4146`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setIntakeGreenDate(`${json.customData['TransportDate.MeasureTime'].dateTimeValue.split('T')[0]}`);\n    //     setIntakeGreenWeight(`${json.currentWeight} Lbs`);\n    //     setIntakeGreenCollector(`${json.customData['CollectorName.Measure'].value}`);\n\n    //   });\n    // // Intake Green - Video\n    // fetch(`${process.env.REACT_APP_GET_VIDEO}/6d48b0b4-25d3-469e-9d60-a657724ca296`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n    //     setIntakeGreenVideo('data:video/mp4;base64,' + json);\n    //   });\n    // // Journey Calls End\n\n    // // Roasting Calls\n    // fetch(`${process.env.REACT_APP_GET_NODE}/73427e9e-e29d-4b33-9a27-95244bdb0370`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json()).then(json => {\n\n    //   setRoastingCounty(json.defaultLocation.country);\n    //   setRoastingState(json.defaultLocation.state);\n    //   setRoastingCity(json.defaultLocation.city);\n\n    // });\n\n    // fetch(`${process.env.REACT_APP_GET_LOT}/50933c21-a1b8-4774-b023-0b7ec19063f4`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setCuppersNotes(json.customData['CuppersNotes.Measure'].value);\n    //     setRoastDate(json.customData['RoastDate.MeasureTime'].dateTimeValue);\n    //     setRoasterName(json.customData['FarmerName.Measure'].value);\n\n    //   });\n\n    // fetch(`${process.env.REACT_APP_GET_IMAGE}/3ba5c81b-076c-4db4-a235-67a6b8b8e90f`, {\n    //   method: 'GET',\n    //   headers: {\n    //     'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n    //   }\n    // }).then(res => res.json())\n    //   .then(json => {\n\n    //     setRoastingImage('data:image/jpg;base64,' + json);\n\n    //   });\n    // Roasting Calls End\n\n  }, [])\n\n\n  // Testing\n  // for (let i = 0; i < farmers.length; i++) {\n  //   console.log(`Hello from App.js - farmers: ${farmers[i].nodeId}`);\n  // }\n  // console.log(`Hello from App.js - farmers: ${farmers}`);\n  // console.log(`Hello from App.js - dev test node: ${devTestgetNode}`);\n\n\n\n  return (\n    <>\n      {/* <Navigation /> */}\n      {/* <Hero /> */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/farmer/:id/:index\">\n          <FarmerDetails />\n        </Route>\n        <Route path=\"*\">\n          <Error />\n        </Route>\n      </Switch>\n\n      {/* <FarmerList farmers={farmers} /> */}\n      {/* <Farmers farmers={farmers} /> */}\n      {/* <Farming\n        lotHistory={lotHistory}\n        pickedBy={pickedBy}\n        pickedCherriesWeight={pickedCherriesWeight}\n        datePicked={datePicked}\n        variety={variety}\n        pickerImage={pickerImage}\n        dePulpingVideo={dePulpingVideo}\n      />\n      <ProcessingExport\n        lotHistory={lotHistory}\n        catrachaIntakeImage={catrachaIntakeImage}\n        milledOnDate={milledOnDate}\n        miller={miller}\n        lotCurrentWeight={lotCurrentWeight}\n        millingLocation={millingLocation}\n        millingVideo={millingVideo}\n        millingImage={millingImage}\n      />\n      <Journey\n        // Green Export \n        exportedFrom={exportedFrom}\n        greenExportDate={greenExportDate}\n        greenExportWeight={greenExportWeight}\n        greenExportVideo={greenExportVideo}\n        // Green Import\n        greenImportLocation={greenImportLocation}\n        greenImportDate={greenImportDate}\n        greenImportImage={greenImportImage}\n        // Green Intake\n        intakeGreenLocation={intakeGreenLocation}\n        intakeGreenDate={intakeGreenDate}\n        intakeGreenWeight={intakeGreenWeight}\n        intakeGreenCollector={intakeGreenCollector}\n        intakeGreenVideo={intakeGreenVideo}\n      />\n      <Roasting\n        roastingCounty={roastingCounty}\n        roastingState={roastingState}\n        roastingCity={roastingCity}\n        cuppersNotes={cuppersNotes}\n        roastDate={roastDate}\n        roasterName={roasterName}\n        roastingImage={roastingImage}\n      />\n      <EconomicsAndTransparency /> */}\n    </>\n  );\n};\n\n/*\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n\n      lotHistory: {},\n\n      // Farming Section - Harvest & De-Pupling\n      farmerHarvest: {\n        pickedBy: '',\n        pickedCherriesWeight: '',\n        datePicked: '',\n        variety: '',\n        pickerImage: ''\n      },\n      farmerDePulping: {\n        dePulpingVideo: ''\n      },\n\n      // Processed and Exported by Catracha Coffee - Intake & Milling\n      catrachaIntakeImage: '',\n      milling: {\n        milledOnDate: '',\n        miller: '',\n        lotCurrentWeight: ''\n      },\n      millingLocation: '',\n      millingVideo: '',\n      millingImage: '',\n\n      // Journey Highlights\n      // Green Export\n      exportedFrom: '',\n      greenExportDate: '',\n      greenExportWeight: '',\n      greenExportVideo: '',\n      // Green Import\n      greenImportLocation: '',\n      greenImportDate: '',\n      greenImportImage: '',\n      // Intake Green\n      intakeGreenLocation: '',\n      intakeGreenDate: '',\n      intakeGreenWeight: '',\n      intakeGreenCollector: '',\n      intakeGreenVideo: '',\n\n      // Roasting\n      roasting: {\n\n      },\n      roastingCounty: '',\n      roastingState: '',\n      roastingCity: '',\n\n      cuppersNotes: '',\n      roastDate: '',\n      roasterName: '',\n\n      roastingImage: '',\n    }\n  }\n\n  componentDidMount() {\n\n    // Get Lot History\n    fetch(`https://bext360api.azure-api.net/retail/v1/getlothistory/a58fc3bf-94fd-4f0f-bd37-0947d8ba4146`, {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        lotHistory: json\n      })\n    });\n\n    // Farmer Harvest, 'Picked by', 'Picked Cherries Weight', 'Date picked', 'Variety' and Image\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/5c955a2e-90ef-6bf4-fa8a-1813ee5d4687', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n\n          farmerHarvest: {\n\n            pickedBy: json.customData['FarmerName.Measure'].value,\n            pickedCherriesWeight: json.customData['TotalValue.Measure'].value + ' lbs',\n            datePicked: json.customData['HarvestDate.MeasureTime'].dateTimeValue,\n            variety: json.customData['Varietal.Measure'].value,\n            pickerImage: json.customData['LotFarmerProductImage.Measure'].value\n\n          }\n\n        })\n      });\n\n    // De-Pulping Video\n    fetch('https://bext360api.azure-api.net/retail/v1/getvideo/df5e4e96-5133-4c85-ad5f-032d65182723', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n\n          farmerDePulping: {\n            dePulpingVideo: json\n          }\n\n        })\n      });\n\n    // Roasting Node\n    fetch('https://bext360api.azure-api.net/retail/v1/getnode/73427e9e-e29d-4b33-9a27-95244bdb0370', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        roastingCounty: json.defaultLocation.country,\n        roastingState: json.defaultLocation.state,\n        roastingCity: json.defaultLocation.city,\n        isLoaded: true,\n      })\n    });\n\n    // Roasting Lot\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/50933c21-a1b8-4774-b023-0b7ec19063f4', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          cuppersNotes: json.customData['CuppersNotes.Measure'].value,\n          roastDate: json.customData['RoastDate.MeasureTime'].dateTimeValue,\n          roasterName: json.customData['FarmerName.Measure'].value,\n        })\n      });\n\n    // Roasting Image\n    fetch('https://bext360api.azure-api.net/retail/v1/getimage/3ba5c81b-076c-4db4-a235-67a6b8b8e90f', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          roastingImage: json,\n        })\n      });\n\n    // Catracha Intake Parchment, Image\n    fetch('https://bext360api.azure-api.net/retail/v1/getimage/2d79f311-eb5f-4a4a-96b8-ec9adfca1617', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          catrachaIntakeImage: json,\n        })\n      });\n\n    // Milling\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/b0c1846f-8cef-410e-a2ec-f6d9f3843e9f', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          milling: {\n            milledOnDate: `${json.customData['MillingDate.MeasureTime'].dateTimeValue.split('T')[0]}`,\n            miller: `${json.customData['FarmerName.Measure'].value}`,\n            lotCurrentWeight: `${json.currentWeight} Lbs`\n          }\n        })\n      });\n    // Milling Location\n    fetch('https://bext360api.azure-api.net/retail/v1/getnode/8a14226b-873b-4893-bedc-a9699dc28472', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        millingLocation: `${json.defaultLocation.city}, ${json.defaultLocation\n          .state}, ${json.defaultLocation.country}`\n      })\n    });\n    // Milling Video\n    fetch('https://bext360api.azure-api.net/retail/v1/getvideo/5b80c8dc-1dac-4eaf-8674-75052d83d0c5', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          millingVideo: json\n        })\n      });\n    // Milling Image\n    fetch('https://bext360api.azure-api.net/retail/v1/getimage/14d5be6c-8f0e-48dd-88ca-46a1958a2fcf', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          millingImage: json,\n        })\n      });\n\n    // Journey Highlights\n    // Green Export - Exported From\n    fetch('https://bext360api.azure-api.net/retail/v1/getnode/c51f7616-5fb6-4416-be83-c98dc0d25df1', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        exportedFrom: `${json.defaultLocation.city}, ${json.defaultLocation\n          .state}, ${json.defaultLocation.country}`\n      })\n    });\n    // Green Export - Date & Weight\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/f1222ba7-0c10-4abf-b49f-c197be1ec8e1', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          greenExportDate: `${json.customData['ExportDate.MeasureTime'].dateTimeValue.split('T')[0]}`,\n          greenExportWeight: ` ${json.absorbedWeight} Lbs`\n        })\n      });\n    // Green Export - Video\n    fetch('https://bext360api.azure-api.net/retail/v1/getvideo/c8bf9e23-1ae9-4422-8e00-984566d5663a', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          greenExportVideo: json\n        })\n      });\n    // Green Import - Imported At\n    fetch('https://bext360api.azure-api.net/retail/v1/getnode/b2d1d8b3-498b-424e-87df-3050aa237115', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        greenImportLocation: `${json.defaultLocation.city}, ${json.defaultLocation\n          .state}, ${json.defaultLocation.country}`\n      })\n    });\n    // Green Import - Date\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/8f43a6a8-52aa-45d6-9bba-cbf8f823037d', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          greenImportDate: `${json.customData['ImportDate.MeasureTime'].dateTimeValue.split('T')[0]}`\n        })\n      });\n    // Green Import - Image\n    fetch('https://bext360api.azure-api.net/retail/v1/getimage/4aa16929-f043-4520-809d-d1f62cfb106d', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          greenImportImage: json,\n        })\n      });\n    // CIntake Green - Roaster Received in\n    fetch('https://bext360api.azure-api.net/retail/v1/getnode/1dc41db1-f7b5-45f1-8810-432e6be023cb', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        intakeGreenLocation: `${json.defaultLocation.city}, ${json.defaultLocation.state}, ${json.defaultLocation.country}`\n      })\n    });\n    // Intake Green - Date, Weight, & Received by\n    fetch('https://bext360api.azure-api.net/retail/v1/getlot/a58fc3bf-94fd-4f0f-bd37-0947d8ba4146', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          intakeGreenDate: `${json.customData['TransportDate.MeasureTime'].dateTimeValue.split('T')[0]}`,\n          intakeGreenWeight: `${json.currentWeight} Lbs`,\n          intakeGreenCollector: ` ${json.customData['CollectorName.Measure'].value}`\n        })\n      });\n    // Intake Green - Video\n    fetch('https://bext360api.azure-api.net/retail/v1/getvideo/6d48b0b4-25d3-469e-9d60-a657724ca296', {\n      method: 'GET',\n      headers: {\n        'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n      }\n    }).then(res => res.json())\n      .then(json => {\n        this.setState({\n          intakeGreenVideo: json\n        })\n      });\n\n  }\n  // Component Did Mount\n\n  render() {\n\n    var { isLoaded, roastingCity, roastingCounty, roastingState, cuppersNotes, roastDate, roasterName, roastingImage } = this.state;\n\n\n    // console.log(this.state.farmerDePulping.dePulpingVideo);\n\n\n    if (!isLoaded) {\n      return (\n        <div>Loading</div>\n      );\n    } else {\n\n      return (\n        <>\n\n          <Navigation />\n          <Hero />\n          <Farming\n            farmerHarvest={this.state.farmerHarvest}\n            farmerDePulping={this.state.farmerDePulping.dePulpingVideo}\n            lotHistory={this.state.lotHistory}\n          />\n          <ProcessingExport\n            lotHistory={this.state.lotHistory}\n            catrachaIntakeImage={this.state.catrachaIntakeImage}\n            milling={this.state.milling}\n            millingLocation={this.state.millingLocation}\n            millingVideo={this.state.millingVideo}\n            millingImage={this.state.millingImage}\n          />\n          <Journey\n            // Green Export \n            exportedFrom={this.state.exportedFrom}\n            greenExportDate={this.state.greenExportDate}\n            greenExportWeight={this.state.greenExportWeight}\n            greenExportVideo={this.state.greenExportVideo}\n            // Green Import\n            greenImportLocation={this.state.greenImportLocation}\n            greenImportDate={this.state.greenImportDate}\n            greenImportImage={this.state.greenImportImage}\n            // Green Intake\n            intakeGreenLocation={this.state.intakeGreenLocation}\n            intakeGreenDate={this.state.intakeGreenDate}\n            intakeGreenWeight={this.state.intakeGreenWeight}\n            intakeGreenCollector={this.state.intakeGreenCollector}\n            intakeGreenVideo={this.state.intakeGreenVideo}\n          />\n          <Roasting\n            country={roastingCounty}\n            state={roastingState}\n            city={roastingCity}\n            cuppersNotes={cuppersNotes}\n            roastDate={roastDate}\n            roasterName={roasterName}\n            roastingImage={roastingImage}\n          />\n          <EconomicsAndTransparency />\n\n        </>\n      );\n    }\n\n    // Render\n  }\n\n  // App Component\n}\n\n*/\n\nexport default App;\n","/Users/aidar/Desktop/projects/bcb2021/src/components/Hero.js",["312"],"/Users/aidar/Desktop/projects/bcb2021/src/components/Farming.js",["313"],"import React, { useEffect, useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nconst Farming = (props) => {\n\n    // Render Test\n    // console.log('Hello from farming');\n\n    const [totalAbsorbedWeight, setTotalAbsorbedWeight] = useState('fetching data from BEXT');\n\n    const [totalDePulpedWeight, setTotalDePulpedWeight] = useState('fetching data from BEXT');\n\n    const [dePulpedDates, setdePulpedDates] = useState('fetching data from BEXT');\n\n    // Placeholder object\n    const lotData = {};\n\n    // Absorbed Weights array\n    const absorbedWeights = [];\n\n    // De-pupled Weights array\n    const dePupledWeights = [];\n\n    // De-pluped Dates array\n    const dePupledDates = [];\n\n    let sumOfAbsorbedWeights;\n\n    let sumOfDePupledWeights;\n\n    Object.keys(props.lotHistory).forEach(async function (key) {\n\n        if (props.lotHistory[key].nodeId === '0270eada-dbb8-45dc-a38d-cffc166d87ea') {\n\n            // Getting the lotIDs Array\n            const lotIDs = props.lotHistory[key].lotIds;\n\n            // console.log(lotIDs);\n\n            for (let i = 0; i < lotIDs.length; i++) {\n                // API call and object assignment\n                Object.assign(lotData,\n                    await fetch(`${process.env.REACT_APP_GET_LOT}/${lotIDs[i]}`, {\n                        method: 'GET',\n                        headers: {\n                            'Ocp-Apim-Subscription-Key': `${process.env.REACT_APP_API_KEY}`\n                        }\n                    }).then(res => res.json()));\n\n                // Getting Absorbed Weight in integer format\n                absorbedWeights[i] = parseInt(lotData.absorbedWeight);\n\n                // Getting De-Pupled Weight in integer format\n                dePupledWeights[i] = parseInt(lotData.currentWeight);\n\n                // Capturing De-Pupled Date into the array\n                dePupledDates[i] = lotData.customData['De-PulpingDate.MeasureTime'].dateTimeValue;\n            }\n\n            // Getting the sum of Absorbed Weights\n            sumOfAbsorbedWeights = absorbedWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Getting the sum of De-Pupled Weight Weights\n            sumOfDePupledWeights = dePupledWeights.reduce((accumulator, currentValue) => {\n                return accumulator + currentValue;\n            }, 0);\n\n            // Sorting the De-Pupled Dates Array\n            dePupledDates.sort();\n\n            // Testing\n            // console.log(sumOfAbsorbedWeights, sumOfDePupledWeights, dePupledDates[0], dePupledDates[dePupledDates.length - 1]);\n\n            setTotalAbsorbedWeight(`${sumOfAbsorbedWeights} Lbs`);\n\n            setTotalDePulpedWeight(`${sumOfDePupledWeights} Lbs`);\n\n            setdePulpedDates(`${dePupledDates[0]} and ${dePupledDates[dePupledDates.length - 1]}`);\n\n        }\n\n    });\n\n    return (\n        <div style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='farming'>\n            <Container>\n\n                <h2 style={{ 'margin-bottom': '3rem' }}>Grown, Picked, and Processed by Claudia & Juan</h2>\n\n                <Row>\n\n                    <Col md>\n\n                        <Card border=\"dark\" style={{ 'margin-bottom': '2rem' }}>\n\n                            {/* <Card.Img variant=\"top\" src={slideOne} style={{ 'height': '20rem' }} /> */}\n                            <Card.Body>\n                                <Card.Title>Farmer Harvest</Card.Title>\n                                <Card.Text>\n                                    Picked by: {props.pickedBy}<br />\n                                    Picked Cherries Weight: {props.pickedCherriesWeight}<br />\n                                    Date picked: {props.datePicked}<br />\n                                    Variety: {props.variety}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Img variant=\"top\" src={props.pickerImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n\n                    </Col>\n\n                    <Col md>\n\n                        <Card border=\"dark\">\n                            <Card.Body>\n                                <Card.Title>Farmer De-Pulping</Card.Title>\n                                <Card.Text>\n                                    Total Absorbed Weight: {totalAbsorbedWeight}<br />\n                                    Total De-pulped Weight: {totalDePulpedWeight}<br />\n                                    De-pulped between: {dePulpedDates}\n                                </Card.Text>\n                            </Card.Body>\n                            <video style={{ 'height': '20rem' }} src={props.dePulpingVideo} controls></video>\n                        </Card>\n                    </Col>\n\n                </Row>\n\n            </Container>\n        </div >\n    );\n}\n\nexport default Farming;","/Users/aidar/Desktop/projects/bcb2021/src/components/EconomicsAndTransparency.js",["314","315","316","317","318","319"],"/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingExport.js",["320","321"],"/Users/aidar/Desktop/projects/bcb2021/src/components/Roasting.js",["322","323","324","325","326","327"],"import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Image from 'react-bootstrap/Image'\n\nimport Button from 'react-bootstrap/Button';\n\nimport slideOne from '../images/slideOne.jpg';\nimport slideTwo from '../images/slideTwo.jpg';\n\nimport './Roasting.css';\n\nexport const Roasting = (props) => {\n\n    // Converting image\n    // const source = 'data:image/jpeg;base64,' + props.roastingImage;\n\n    return (\n        <div className=\"roasting-section-bg\" style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='roasting'>\n            <Container>\n                <h2 style={{ color: 'white' }}>Roasted by Queen City</h2>\n                <p style={{ color: 'white' }}>Queen City is a collective coffee company in Denver building community from farm to cup. Our coffee comes from farmers and producers we know, and is then small-batch roasted in the city we love. We believe that honest relationships, from farmers to consumers, achieve an equitable and sustainable coffee supply chain.</p>\n                <Row>\n                    <Col lg={6} md={12}>\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent', 'margin-bottom': '2rem' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    Roasted at: {props.roastingCity}, {props.roastingState}, {props.roastingCounty}<br />\n                                    Cuppers Notes: {props.cuppersNotes}<br />\n                                    Roast Date: {props.roastDate}<br />\n                                    Roaster: {props.roasterName}<br />\n                                </Card.Text>\n                            </Card.Body>\n                            {/* <Button variant=\"light\" size=\"lg\" block style={{'margin-top': '2rem'}}>BUY THIS COFFEE</Button> */}\n                        </Card>\n                    </Col>\n                    <Col lg={6} md={12}>\n                        <Card border=\"light\" text='light' border='light' style={{ 'background-color': 'transparent' }}>\n                            <Card.Img variant=\"top\" src={props.roastingImage} style={{ 'max-height': '40rem' }} />\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Roasting;","/Users/aidar/Desktop/projects/bcb2021/src/components/Journey.js",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/Slider.js",["328","329"],"/Users/aidar/Desktop/projects/bcb2021/src/components/Farmers.js",["330","331","332","333","334","335"],"import React, { useEffect, useState } from 'react';\n\nimport FarmerList from './FarmerList/FarmerList';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nexport const Farmers = (props) => {\n\n    return (\n        <div style={{ 'padding-top': '4em', 'padding-bottom': '4em' }} id='farming'>\n            <Container>\n\n                <h2 style={{ 'margin-bottom': '3rem' }}>Farmers</h2>\n\n                {(props.farmers.length !== 0)\n                    ? <div>\n                        {props.farmers.map(farmer => (\n                            <React.Fragment key={farmer.harvestGeneralNodeID}>\n                                <p>{farmer.farmerName}</p>\n                                <p>{farmer.harvestGeneralNodeID}</p>\n                                <img src={farmer.farmerPicture}></img>\n                            </React.Fragment>\n                        ))}\n                    </div>\n\n                    : <h2>fetching data from BEXT</h2>\n                }\n\n                <FarmerList>\n                </FarmerList>\n\n            </Container>\n        </div >\n    );\n}\n\nexport default Farmers;","/Users/aidar/Desktop/projects/bcb2021/src/components/FarmerList/FarmerList.js",["336","337","338","339"],"import React, { useEffect, useState } from 'react';\nimport { useGlobalContext } from '../../context';\n\nimport './FarmerList.css';\n\nimport Loading from '../Loading/Loading';\nimport FarmerCard from '../FarmerCard/FarmerCard';\n\nexport const FarmerList = (props) => {\n\n    const { farmers, loading } = useGlobalContext();\n\n    return (\n        <>\n            <section className='section'>\n                <h2 className='section-title'>Farmers</h2>\n                <div className='cocktails-center'>\n                    {farmers.map((farmer, index) => {\n                        return <FarmerCard key={farmer.id} farmer={farmer} index={index} />\n                    })}\n                </div>\n            </section>\n            {/* <h1 style={{ 'margin-bottom': '3rem', 'margin-top': '3rem', 'text-align': 'center' }}>Farmers</h1>\n            <section className=\"farmer-list\">\n                {(props.farmers.length !== 0)\n                    ? props.farmers.map(farmer => (\n                        <FarmerCard key={farmer.harvestGeneralNodeID} farmer={farmer} />\n                    ))\n                    : <p>fetching data from BEXT</p>\n                }\n            </section> */}\n        </>\n    );\n}\n\nexport default FarmerList;","/Users/aidar/Desktop/projects/bcb2021/src/components/FarmerCard/FarmerCard.js",["340"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './FarmerCard.css';\nimport slideOne from '../../images/slideOne.jpg';\n\nexport const FarmerCard = (props) => {\n\n    const [farmer, setFarmer] = useState({});\n\n    useEffect(() => {\n        setFarmer(props.farmer);\n    }, [])\n\n    // console.log(farmer);\n\n    return (\n        <article className='cocktail'>\n            <div className='img-contaienr'>\n                <img alt={props.farmer.farmerName} src={slideOne} />\n            </div>\n            <div className='cocktail-footer'>\n                <h3>{props.farmer.farmerName}</h3>\n                {/* <p>{props.index}</p> */}\n                <Link\n                    to={{\n                        // pathname: `/farmer/${props.farmer.farmerName.replace(/\\s+/g, '')}`,\n                        pathname: `/farmer/${props.farmer.harvestGeneralNodeID}/${props.index}`,\n                        state: {\n                            farmer\n                        }\n                    }}\n                    className=\"btn btn-primary btn-details\">\n                    Learn More\n                </Link>\n            </div>\n        </article >\n        // <div className='card-container'>\n        //     <img alt='farmer' src={`${props.farmer.farmerPicture}&size=180x180`} />\n        //     <h1>{props.farmer.farmerName}</h1>\n        // </div>\n    );\n}\n\nexport default FarmerCard;","/Users/aidar/Desktop/projects/bcb2021/src/pages/Home.js",["341","342"],"import React from 'react'\nimport Hero from '../components/Hero';\nimport HomePageNavigation from '../components/HomePageNavigation/HomePageNavigation';\nimport FarmerList from '../components/FarmerList/FarmerList';\nimport SearchForm from '../components/SearchForm/SearchForm';\nexport const Home = () => {\n    return (\n        <main>\n            {/* <Hero /> */}\n            {/* <SearchForm /> */}\n            <HomePageNavigation />\n            <FarmerList />\n        </main>\n    )\n}\n\nexport default Home;","/Users/aidar/Desktop/projects/bcb2021/src/pages/FarmerDetails.js",["343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"/Users/aidar/Desktop/projects/bcb2021/src/pages/Error.js",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/SearchForm/SearchForm.js",["367"],"import React from 'react'\nimport { useGlobalContext } from '../../context'\n\nconst SearchForm = () => {\n\n    const { setSearchTerm } = useGlobalContext();\n\n    return (\n        <section className='section search'>\n            <h2>Search Form Component</h2>\n        </section>\n    )\n}\n\nexport default SearchForm;","/Users/aidar/Desktop/projects/bcb2021/src/context.js",["368","369","370","371","372"],"import React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('a');\n    const [farmers, setFarmers] = useState([\n        // {\n        //     farmerName: 'Gloria',\n        //     farmerPicture: 'https://robohash.org/1?set=set4',\n        //     harvestGeneralNodeID: 'a4c8bf16-7c5b-44d9-a25b-2635bc9d803e',\n        //     harvestLotId: '1f102274-00be-4074-b6e8-19688f4901a6',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Luis',\n        //     farmerPicture: 'https://robohash.org/2?set=set4',\n        //     harvestGeneralNodeID: '5b10dd8f-2d9b-4595-98ab-4896ece46466',\n        //     harvestLotId: 'c966a77d-ab37-4bc5-90be-9f8bc5b29a2c',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Atanacio',\n        //     farmerPicture: 'https://robohash.org/3?set=set4',\n        //     harvestGeneralNodeID: '174a5f0c-0a98-46b9-b1af-c3fee2e78470',\n        //     harvestLotId: '60c7d78f-02cd-4d55-ae37-1092ffaf74a7',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'David',\n        //     farmerPicture: 'https://robohash.org/4?set=set4',\n        //     harvestGeneralNodeID: 'f5b260cf-afd8-4525-9533-4562a8741f0a',\n        //     harvestLotId: '4b8d3aae-d07e-462a-abb8-ea09e2145d18',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Jose Antonio Nolasco',\n        //     farmerPicture: 'https://robohash.org/5?set=set4',\n        //     harvestGeneralNodeID: '8c8a341d-112d-43a0-bc28-8d7b5eceb697',\n        //     harvestLotId: '73fa79db-200b-4e0a-9ae1-8d3b9bb7967c',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Adan Hernandez',\n        //     farmerPicture: 'https://robohash.org/6?set=set4',\n        //     harvestGeneralNodeID: 'd7a3d524-d8fa-4f0d-b695-e5c7dfbc09a2',\n        //     harvestLotId: '6c99f5eb-baf1-4ecc-a06c-4541198a2563',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Mirian Vasquez',\n        //     farmerPicture: 'https://robohash.org/7?set=set4',\n        //     harvestGeneralNodeID: '1dd07753-5a46-4151-a720-badaa9462153',\n        //     harvestLotIds: [\"e6d2169c-1832-4d6c-99f0-ef7ce201814f\", \"bca0833a-5ca8-4ab9-9a09-f865b3e83fb4\", \"fb23bd3c-0e7d-43bb-a19b-7662fe200b4f\", \"cf8be016-e1fe-4599-ae95-67ad0f0953a7\", \"be21e722-c84b-4b59-823b-8556be2cfbbd\", \"81594155-075b-4d2c-b8e5-c2a1e7bab24c\", \"7c4d9215-f8ba-47f2-abaf-3a605583c9ed\", \"41607094-0602-4d83-a1c6-72f3673158b0\", \"5fac7aec-4e7e-47bf-bf5a-3d33d4109fd9\", \"d67682b3-421f-45e6-a8ae-9a55b453c67e\", \"d6a87e15-fb8e-4e26-8160-3e360d929786\", \"8b639ef4-0e29-4a39-a245-dc2c9cce1335\", \"bbe52a53-b237-4398-a9d5-9453fd36a837\"],\n        //     processingLotIds: [\"04601f12-8060-45ec-9b31-5c3dc1c206de\"],\n        //     intakeNodeIds: ''\n        // },\n        // {\n        //     farmerName: 'Fidelina',\n        //     farmerPicture: 'https://robohash.org/8?set=set4',\n        //     harvestGeneralNodeID: '77073017-c640-4822-ad6d-7e6fd51da0f8',\n        //     harvestLotId: 'be0ae838-c8e1-4c82-9812-7dcec972cc16',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        {\n            farmerName: 'Claudia & Juan',\n            farmerPicture: '../../src/images/slideOne.jpg',\n            harvestGeneralNodeID: '702079e1-62c8-4087-bc82-544acf15d141',\n            harvestLotIds: [\"266b83d3-0a8d-4e8e-b380-a58487988f13\",\n                \"aee0370c-214e-422d-8d3f-32fdc006b652\",\n                \"368e6e57-8432-44dd-8e1d-5e9eeb25c046\",\n                \"48ab0129-8bea-477c-bbf8-3a6cff4a8b15\",\n                \"7ab506ff-57c1-48a7-8e0e-bd8a73ce3512\",\n                \"a3d9df53-e520-4f0d-b2a8-e2e13f744a32\",\n                \"5d48512e-6b6d-41bc-90e3-a3396937f97a\",\n                \"b874f685-0cc8-4d80-b9f3-1dbaceddd5c9\",\n                \"75548348-afe9-4cd5-b05b-3e261d0a36df\",\n                \"588fc370-80eb-44a4-97df-a5cebca0a039\",\n                \"932c3acf-943a-4a5e-b972-84071dfee949\",\n                \"3e767b37-6374-4263-aa78-d58908302400\",\n                \"856899eb-d96f-411c-b82d-4761af23c3f4\",\n                \"95d070b6-57b8-4b79-a6eb-92b7da4a8fd6\",\n                \"83f694a4-5ed8-43bb-86de-1636c5d13b99\",\n                \"e3b4fe4a-5aba-4c08-b469-4e3bbe2b4479\",\n                \"0b5dd230-394b-4a13-9e0a-53f01ad14efc\",\n                \"19097575-3f74-4055-a2aa-fc0bbd3220e1\",\n                \"e1c77b43-941d-4059-9930-916877ba9958\",\n                \"4bdf98f9-82e4-44e5-967c-747873842c04\",\n                \"ed6edf9d-6386-4722-8aae-6686d23efe86\",\n                \"62576b00-92ab-41c0-94aa-1ca1f3961687\",\n                \"100a8b39-3cb9-4ceb-b0f7-81ae722b867a\",\n                \"e05d3f7d-2046-4d64-9060-ad81d1a3cb34\",\n                \"ac154ed3-fa5a-4fa5-abbc-9883b4d9163f\",\n                \"c58220b1-ef17-4506-beb8-09ad5522f08d\",\n                \"03522d55-7be4-4af7-ad9d-d1e5d465060c\",\n                \"dc16a566-a30b-46b4-bd23-407faec4a381\",\n                \"aa3e0a4c-5f9d-4729-b673-069ab4d82c2d\",\n                \"9b38d480-c54c-4bc7-ae64-a57a10e1d5d5\",\n                \"77f23537-a676-4674-9830-c6ca9ac4e7e3\",\n                \"aecef73d-7cb9-45b8-a879-5fd6f9067b8c\",\n                \"bd489413-53cf-4610-bd7b-84cba5cc4fe7\",\n                \"a7f24803-e14d-4ccc-97d7-7e36d3f1920b\",\n                \"fc7e7ee5-cdf1-4e7b-a539-2ff23080e36c\",\n                \"05a53125-e75c-4471-bbd6-51e89d7dd0a0\",\n                \"a9564c0c-01b4-422d-8eeb-7373f173b44c\",\n                \"a972494c-a338-4a79-b098-0ea05f2f636c\",\n                \"e49a9dbb-f01a-477a-8e09-ddade3eb8511\",\n                \"400dd108-aea4-4fd5-8490-b92d21eaa52a\",\n                \"967731e3-3d14-4c3d-a095-020e820cef0d\",\n                \"d6386279-13b3-40fe-aa0a-854cfa1791de\",\n                \"155a3099-5d42-4039-b028-629899c26319\",\n                \"ba0528b4-0539-469b-9da9-5c54426ad26a\",\n                \"b91765d6-7c4b-442f-b627-a561f9c6f0f5\",\n                \"9eb85492-9076-4945-9526-5cd7687838d3\",\n                \"edb07e9a-12d7-4ae9-914e-1b41a02432de\",\n                \"a086ec37-1652-4d58-987e-07ff645f63b4\",\n                \"1bb090d3-c7ae-4e8d-9f15-52dc43b8d0e8\",\n                \"6130723c-63b6-43e8-afeb-41e3eec9e3b7\",\n                \"e15f40a1-1459-41be-89ce-b2d5ddaf2289\",\n                \"45f41808-f897-4a55-92e3-e7eeae2d5eef\",\n                \"11801240-2c0b-4197-a903-5ad09f961219\",\n                \"f0edf4dd-eac2-4f60-8e2b-bfaf70dd7e54\",\n                \"f83be741-e587-45e4-8db2-363f39dd7082\",\n                \"cf363d82-1525-42b3-9a12-aa2baf3a83ee\",\n                \"940ccb64-f688-4bae-ab73-7f1446cf1f75\",\n                \"bb2dc393-75f2-4d7d-9a26-8a21205cc3a8\",\n                \"a6001887-59b3-4ed1-b7ad-e9adbf146f3c\",\n                \"39f45766-26ba-4cc1-b272-c6c962fa05c3\",\n                \"8055f078-a44c-4c1e-82a0-0eebee924216\",\n                \"bbee5522-3de6-48d9-8cd9-e5e380eee7ef\",\n                \"ab10e713-87c7-4445-9fb1-6db9473931d6\",\n                \"4f9fadc1-69c1-4208-bff9-cd23c05f049e\",\n                \"2274e4be-0e63-4074-b114-5a36d20a61e6\",\n                \"b5722a59-9c20-494a-81a1-66e9b14a0072\",\n                \"41f2a111-3378-4499-ae7a-8ed1532b86fb\"],\n            processingLotIds: [\"04601f12-8060-45ec-9b31-5c3dc1c206de\",\n                \"86bfef75-9ffe-4984-a9f8-be370fdbc309\",\n                \"d6dcfac5-0610-44bb-a53b-3ba19a4b4a0b\",\n                \"db3457a8-4262-4170-b7d0-ff0f04325805\",\n                \"0bedef98-c38a-430b-b848-843504d90029\",\n                \"36be097a-8f71-4136-90c1-8fdf80dea971\",\n                \"8978b880-2e04-4fef-a252-0aca0c19e172\",\n                \"5e957345-e657-442a-804d-f342de4b85d7\",\n                \"6c4af25b-c0e6-4ac0-9597-89809fdeb122\",\n                \"476fc798-b1fe-4f34-a8af-3ad7ce0eecf7\",\n                \"8dc1ef52-2e4b-4e04-b8e4-7fb8bed63174\",\n                \"3671514d-0de8-4f00-8db6-e1e070036e80\",\n                \"793b5552-03ba-44d4-91d2-c0801de689cc\",\n                \"b1f2c43d-7a10-4dc2-8d3e-5151f6f0af70\",\n                \"24995ef1-64eb-4e6d-96ca-5d0391f5f2bc\",\n                \"fca23d55-c571-454e-964c-fbe3c7992941\",\n                \"7a29756d-48c6-4586-be82-eef1a97e65bd\",\n                \"0264a7f1-fae7-4c01-aeef-c863cf6fd610\"],\n            intakeNodeIds: [\"95769a1b-93b2-4f60-b6f6-2725c4784a37\",\n                \"0b35f4d3-bb85-4c2c-8d29-e655a09bd03c\",\n                \"cf89d142-cff8-49c1-bed3-e3cb729de9e1\",\n                \"a72b07ca-7269-4535-8a3c-fe86eec71047\",\n                \"8dab8f8f-ddb4-4e63-a8ae-9449a0eb0e71\"]\n        },\n        // {\n        //     farmerName: 'Rigoberto',\n        //     farmerPicture: 'https://robohash.org/10?set=set4',\n        //     harvestGeneralNodeID: 'c0cd6532-86dd-4693-843a-5825cabb4e8e',\n        //     harvestLotId: 'e6d2169c-1832-4d6c-99f0-ef7ce201814f',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Maria Adela',\n        //     farmerPicture: 'https://robohash.org/11?set=set4',\n        //     harvestGeneralNodeID: '9efb04d1-76ab-4dae-94dd-29f0b0105fcc',\n        //     harvestLotId: '4ab062aa-d308-44bb-bf69-0d6a837a27f7',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // },\n        // {\n        //     farmerName: 'Gumercindo',\n        //     farmerPicture: 'https://robohash.org/12?set=set4',\n        //     harvestGeneralNodeID: '6e374ca1-ea5f-4cc4-863e-ece4143cad48',\n        //     harvestLotId: 'e6d2169c-1832-4d6c-99f0-ef7ce201814f',\n        //     processingNodeID: '',\n        //     intakeNodeID: ''\n        // }\n    ]);\n\n    return (\n        <AppContext.Provider\n            value={{ loading, farmers, setSearchTerm }}\n        >\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }","/Users/aidar/Desktop/projects/bcb2021/src/components/Loading/Loading.js",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestList/HarvestList.js",["373","374"],"import React, { useEffect, useState } from 'react';\n\n// import './FarmerList.css';\n\nimport Loading from '../Loading/Loading';\nimport HarvestCard from '../HarvestCard/HarvestCard';\n\nexport const HarvestList = (props) => {\n\n    // const [harvestLots, setHarvestLots] = useState([]);\n\n    useEffect(() => {\n\n    }, []);\n\n    // console.log(`Hello From Harvest List`);\n\n\n    return (\n        <>\n            <section className='section'>\n                <h2 className='section-title'>Harvest Lots</h2>\n                <div className='cocktails-center'>\n                    {props.harvestLotIds.map((harvestLot) => {\n                        return <HarvestCard key={harvestLot.id} harvestLot={harvestLot} />\n                    })}\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default HarvestList;","/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestCard/HarvestCard.js",["375","376","377","378"],"/Users/aidar/Desktop/projects/bcb2021/src/components/Pagination/Pagination.js",["379","380","381"],"import React, { useState, useEffect } from 'react';\n\n// Styled Components\nimport {\n    PaginationContainer,\n    SectionTitleContainer,\n    Underline,\n    CardsSection,\n    CardContainer,\n    ButtonContainer,\n    PageButton\n} from './Pagination.styles';\n\nimport HarvestLotCard from '../HarvestLotCard/HarvestLotCard';\n\n// import { useFetch } from './useFetch'\n// import Follower from './Follower'\n\nconst Pagination = (props) => {\n\n    const data = props.harvestLotIds;\n    // console.log(props.harvestLotIds);\n\n    const [page, setPage] = useState(0);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems(data[page]);\n    }, [page])\n\n    const handlePage = (index) => {\n        setPage(index)\n    }\n\n    // useEffect(() => {\n    //     if (loading) return\n    //     setFollowers(data[page])\n    // }, [loading, page])\n\n    // const nextPage = () => {\n    //     setPage((oldPage) => {\n    //         let nextPage = oldPage + 1\n    //         if (nextPage > data.length - 1) {\n    //             nextPage = 0\n    //         }\n    //         return nextPage\n    //     })\n    // }\n\n    // const prevPage = () => {\n    //     setPage((oldPage) => {\n    //         let prevPage = oldPage - 1\n    //         if (prevPage < 0) {\n    //             prevPage = data.length - 1\n    //         }\n    //         return prevPage\n    //     })\n    // }\n\n    // const handlePage = (index) => {\n    //     setPage(index)\n    // }\n\n    return (\n        <div>\n            <SectionTitleContainer>\n                <h2>Pagination Component ({props.numberOfLots} Harvest Lots)</h2>\n                {/* <Underline /> */}\n            </SectionTitleContainer>\n            <CardsSection>\n                {/* <CardContainer>\n                    {props.harvestLotIds.map((harvestLot) => {\n                        return <HarvestLotCard key={harvestLot.id} harvestLot={harvestLot} />\n                    })}\n                </CardContainer> */}\n                <CardContainer>\n                    {items.map((item) => {\n                        return <HarvestLotCard key={item.id} harvestLot={item} />\n                    })}\n                </CardContainer>\n                <ButtonContainer>\n                    {data.map((item, index) => {\n                        return (\n                            <PageButton\n                                key={index}\n                                onClick={() => handlePage(index)}\n                            >\n                                {index + 1}\n                            </PageButton>\n                        )\n                    })}\n                    {/* {data.map((item, index) => {\n                        return (\n                            <button\n                                key={index}\n                                className={`page-btn ${index === page ? 'active-btn' : null}`}\n                                onClick={() => handlePage(index)}\n                            >\n                                {index + 1}\n                            </button>\n                        )\n                    })} */}\n                </ButtonContainer>\n            </CardsSection>\n            {/* <div className='section-title'>\n                <h1>{loading ? 'loading...' : 'pagination'}</h1>\n                <div className='underline'></div>\n            </div>\n            <section className='followers'>\n                <div className='container'>\n                    {followers.map((follower) => {\n                        return <Follower key={follower.id} {...follower} />\n                    })}\n                </div>\n                {!loading && (\n                    <div className='btn-container'>\n                        <button className='prev-btn' onClick={prevPage}>\n                            prev\n            </button>\n                        {data.map((item, index) => {\n                            return (\n                                <button\n                                    key={index}\n                                    className={`page-btn ${index === page ? 'active-btn' : null}`}\n                                    onClick={() => handlePage(index)}\n                                >\n                                    {index + 1}\n                                </button>\n                            )\n                        })}\n                        <button className='next-btn' onClick={nextPage}>\n                            next\n            </button>\n                    </div>\n                )}\n            </section> */}\n        </div>\n    )\n}\n\nexport default Pagination;","/Users/aidar/Desktop/projects/bcb2021/src/components/Pagination/Pagination.styles.jsx",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestLotCard/HarvestLotCard.js",["382"],"/Users/aidar/Desktop/projects/bcb2021/src/components/HarvestLotCard/HarvestLotCard.styles.jsx",[],"/Users/aidar/Desktop/projects/bcb2021/src/utils.js",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSection/ProcessingSection.js",["383","384","385","386","387","388"],"import React, { useEffect, useState } from 'react';\n\n// React Bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\n// Components\nimport ProcessingSectionPagination from '../ProcessingSectionPagination/ProcessingSectionPagination';\n\nconst ProcessingSection = (props) => {\n\n    const paginate = (items) => {\n        const itemsPerPage = 4\n        const numberOfPages = Math.ceil(items.length / itemsPerPage)\n\n        const newItems = Array.from({ length: numberOfPages }, (_, index) => {\n            const start = index * itemsPerPage\n            return items.slice(start, start + itemsPerPage)\n        })\n\n        return newItems\n    }\n\n    return (\n        <section>\n            <h2>Processing</h2>\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Blanditiis necessitatibus molestias, sint, sed similique provident eveniet delectus a nobis maiores vitae sunt quia quod assumenda eligendi deserunt non excepturi repellat!</p>\n            <ProcessingSectionPagination numberOfLots={props.numberOfLots} processingLotIds={paginate(props.processingLotIds)} ></ProcessingSectionPagination>\n        </section>\n    );\n}\n\nexport default ProcessingSection;","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSectionPagination/ProcessingSectionPagination.js",["389","390","391"],"import React, { useState, useEffect } from 'react';\n\n// Styled Components\nimport {\n    PaginationContainer,\n    SectionTitleContainer,\n    Underline,\n    CardsSection,\n    CardContainer,\n    ButtonContainer,\n    PageButton\n} from './ProcessingSectionPagination.styles';\n\nimport ProcessingLotCard from '../ProcessingLotCard/ProcessingLotCard';\n\nconst ProcessingSectionPagination = (props) => {\n\n    const data = props.processingLotIds;\n    // console.log(props.processingLotIds);\n\n    const [page, setPage] = useState(0);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        setItems(data[page]);\n    }, [page])\n\n    const handlePage = (index) => {\n        setPage(index)\n    }\n\n    // useEffect(() => {\n    //     if (loading) return\n    //     setFollowers(data[page])\n    // }, [loading, page])\n\n    // const nextPage = () => {\n    //     setPage((oldPage) => {\n    //         let nextPage = oldPage + 1\n    //         if (nextPage > data.length - 1) {\n    //             nextPage = 0\n    //         }\n    //         return nextPage\n    //     })\n    // }\n\n    // const prevPage = () => {\n    //     setPage((oldPage) => {\n    //         let prevPage = oldPage - 1\n    //         if (prevPage < 0) {\n    //             prevPage = data.length - 1\n    //         }\n    //         return prevPage\n    //     })\n    // }\n\n    // const handlePage = (index) => {\n    //     setPage(index)\n    // }\n\n    return (\n        <div>\n            <SectionTitleContainer>\n                <h2>Processing Pagination Component ({props.numberOfLots} Lots)</h2>\n            </SectionTitleContainer>\n            <CardsSection>\n                <CardContainer>\n                    {items.map((item) => {\n                        return <ProcessingLotCard key={item.id} harvestLot={item} />\n                    })}\n                </CardContainer>\n                <ButtonContainer>\n                    {data.map((item, index) => {\n                        return (\n                            <PageButton\n                                key={index}\n                                onClick={() => handlePage(index)}\n                            >\n                                {index + 1}\n                            </PageButton>\n                        )\n                    })}\n                </ButtonContainer>\n            </CardsSection>\n            {/* <div className='section-title'>\n                <h1>{loading ? 'loading...' : 'pagination'}</h1>\n                <div className='underline'></div>\n            </div>\n            <section className='followers'>\n                <div className='container'>\n                    {followers.map((follower) => {\n                        return <Follower key={follower.id} {...follower} />\n                    })}\n                </div>\n                {!loading && (\n                    <div className='btn-container'>\n                        <button className='prev-btn' onClick={prevPage}>\n                            prev\n            </button>\n                        {data.map((item, index) => {\n                            return (\n                                <button\n                                    key={index}\n                                    className={`page-btn ${index === page ? 'active-btn' : null}`}\n                                    onClick={() => handlePage(index)}\n                                >\n                                    {index + 1}\n                                </button>\n                            )\n                        })}\n                        <button className='next-btn' onClick={nextPage}>\n                            next\n            </button>\n                    </div>\n                )}\n            </section> */}\n        </div>\n    )\n}\n\nexport default ProcessingSectionPagination;","/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingSectionPagination/ProcessingSectionPagination.styles.jsx",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingLotCard/ProcessingLotCard.js",["392","393","394"],"/Users/aidar/Desktop/projects/bcb2021/src/components/ProcessingLotCard/ProcessingLotCard.styles.jsx",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/LeafletMap/LeafletMap.js",["395","396","397","398","399","400","401"],"/Users/aidar/Desktop/projects/bcb2021/src/components/HomePageNavigation/HomePageNavigation.js",[],"/Users/aidar/Desktop/projects/bcb2021/src/components/DetailsPageNavigation/DetailsPageNavigation.js",["402","403","404","405","406"],"import React, { useEffect, useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { HashLink } from 'react-router-hash-link';\n\n// Bootstrap components\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\n\nexport default function DetailsPageNavigation(props) {\n\n    const scrollWidthOffset = (el) => {\n        const yCoordinate = el.getBoundingClientRect().top + window.pageYOffset;\n        const yOffset = -110;\n        window.scrollTo({ top: yCoordinate + yOffset, behavior: 'smooth' });\n    }\n\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\n                <Container>\n\n                    <Navbar.Brand href=\"/\">BCB</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n                        <Nav className=\"ml-auto\">\n                            <Nav.Link href=\"/\">HOME</Nav.Link>\n\n                            <Nav.Link\n                                as={HashLink}\n                                to={`#harvest`}\n                                smooth\n                                scroll={el => scrollWidthOffset(el)}\n                            >\n                                HARVEST\n                            </Nav.Link>\n                            <Nav.Link\n                                as={HashLink}\n                                to={`#processing`}\n                                smooth\n                                scroll={el => scrollWidthOffset(el)}\n                            >\n                                PROCESSING\n                            </Nav.Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n\n                </Container>\n            </Navbar>\n        </>\n    );\n}",{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":12,"column":20,"nodeType":"413","messageId":"414","endLine":12,"endColumn":26},{"ruleId":"411","severity":1,"message":"415","line":13,"column":3,"nodeType":"413","messageId":"414","endLine":13,"endColumn":9},{"ruleId":"411","severity":1,"message":"416","line":14,"column":3,"nodeType":"413","messageId":"414","endLine":14,"endColumn":8},{"ruleId":"417","severity":1,"message":"418","line":121,"column":59,"nodeType":"419","endLine":121,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":137,"column":59,"nodeType":"419","endLine":137,"endColumn":73},{"ruleId":"411","severity":1,"message":"420","line":4,"column":8,"nodeType":"413","messageId":"414","endLine":4,"endColumn":17},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"422","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":16},{"ruleId":"411","severity":1,"message":"424","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":13},{"ruleId":"411","severity":1,"message":"425","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":14},{"ruleId":"411","severity":1,"message":"422","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":12,"column":8,"nodeType":"413","messageId":"414","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":28,"column":59,"nodeType":"419","endLine":28,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":41,"column":59,"nodeType":"419","endLine":41,"endColumn":73},{"ruleId":"411","severity":1,"message":"425","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":14},{"ruleId":"411","severity":1,"message":"422","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":12,"column":8,"nodeType":"413","messageId":"414","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":29,"column":59,"nodeType":"419","endLine":29,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":45,"column":59,"nodeType":"419","endLine":45,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":62,"column":59,"nodeType":"419","endLine":62,"endColumn":73},{"ruleId":"411","severity":1,"message":"416","line":4,"column":35,"nodeType":"413","messageId":"414","endLine":4,"endColumn":40},{"ruleId":"411","severity":1,"message":"415","line":4,"column":42,"nodeType":"413","messageId":"414","endLine":4,"endColumn":48},{"ruleId":"407","replacedBy":"426"},{"ruleId":"409","replacedBy":"427"},{"ruleId":"407","replacedBy":"428"},{"ruleId":"409","replacedBy":"429"},{"ruleId":"411","severity":1,"message":"430","line":4,"column":8,"nodeType":"413","messageId":"414","endLine":4,"endColumn":15},{"ruleId":"411","severity":1,"message":"412","line":10,"column":27,"nodeType":"413","messageId":"414","endLine":10,"endColumn":33},{"ruleId":"411","severity":1,"message":"431","line":18,"column":8,"nodeType":"413","messageId":"414","endLine":18,"endColumn":18},{"ruleId":"411","severity":1,"message":"432","line":19,"column":8,"nodeType":"413","messageId":"414","endLine":19,"endColumn":12},{"ruleId":"411","severity":1,"message":"433","line":20,"column":8,"nodeType":"413","messageId":"414","endLine":20,"endColumn":15},{"ruleId":"411","severity":1,"message":"434","line":21,"column":8,"nodeType":"413","messageId":"414","endLine":21,"endColumn":18},{"ruleId":"411","severity":1,"message":"435","line":22,"column":8,"nodeType":"413","messageId":"414","endLine":22,"endColumn":15},{"ruleId":"411","severity":1,"message":"436","line":23,"column":8,"nodeType":"413","messageId":"414","endLine":23,"endColumn":24},{"ruleId":"411","severity":1,"message":"437","line":24,"column":8,"nodeType":"413","messageId":"414","endLine":24,"endColumn":15},{"ruleId":"411","severity":1,"message":"438","line":25,"column":8,"nodeType":"413","messageId":"414","endLine":25,"endColumn":16},{"ruleId":"411","severity":1,"message":"439","line":26,"column":8,"nodeType":"413","messageId":"414","endLine":26,"endColumn":32},{"ruleId":"411","severity":1,"message":"440","line":32,"column":10,"nodeType":"413","messageId":"414","endLine":32,"endColumn":20},{"ruleId":"411","severity":1,"message":"441","line":32,"column":22,"nodeType":"413","messageId":"414","endLine":32,"endColumn":35},{"ruleId":"411","severity":1,"message":"442","line":35,"column":10,"nodeType":"413","messageId":"414","endLine":35,"endColumn":18},{"ruleId":"411","severity":1,"message":"443","line":35,"column":20,"nodeType":"413","messageId":"414","endLine":35,"endColumn":31},{"ruleId":"411","severity":1,"message":"444","line":36,"column":10,"nodeType":"413","messageId":"414","endLine":36,"endColumn":30},{"ruleId":"411","severity":1,"message":"445","line":36,"column":32,"nodeType":"413","messageId":"414","endLine":36,"endColumn":55},{"ruleId":"411","severity":1,"message":"446","line":37,"column":10,"nodeType":"413","messageId":"414","endLine":37,"endColumn":20},{"ruleId":"411","severity":1,"message":"447","line":37,"column":22,"nodeType":"413","messageId":"414","endLine":37,"endColumn":35},{"ruleId":"411","severity":1,"message":"448","line":38,"column":10,"nodeType":"413","messageId":"414","endLine":38,"endColumn":17},{"ruleId":"411","severity":1,"message":"449","line":38,"column":19,"nodeType":"413","messageId":"414","endLine":38,"endColumn":29},{"ruleId":"411","severity":1,"message":"450","line":39,"column":10,"nodeType":"413","messageId":"414","endLine":39,"endColumn":21},{"ruleId":"411","severity":1,"message":"451","line":39,"column":23,"nodeType":"413","messageId":"414","endLine":39,"endColumn":37},{"ruleId":"411","severity":1,"message":"452","line":40,"column":10,"nodeType":"413","messageId":"414","endLine":40,"endColumn":24},{"ruleId":"411","severity":1,"message":"453","line":40,"column":26,"nodeType":"413","messageId":"414","endLine":40,"endColumn":43},{"ruleId":"411","severity":1,"message":"454","line":43,"column":10,"nodeType":"413","messageId":"414","endLine":43,"endColumn":29},{"ruleId":"411","severity":1,"message":"455","line":43,"column":31,"nodeType":"413","messageId":"414","endLine":43,"endColumn":53},{"ruleId":"411","severity":1,"message":"456","line":44,"column":10,"nodeType":"413","messageId":"414","endLine":44,"endColumn":22},{"ruleId":"411","severity":1,"message":"457","line":44,"column":24,"nodeType":"413","messageId":"414","endLine":44,"endColumn":39},{"ruleId":"411","severity":1,"message":"458","line":45,"column":10,"nodeType":"413","messageId":"414","endLine":45,"endColumn":16},{"ruleId":"411","severity":1,"message":"459","line":45,"column":18,"nodeType":"413","messageId":"414","endLine":45,"endColumn":27},{"ruleId":"411","severity":1,"message":"460","line":46,"column":10,"nodeType":"413","messageId":"414","endLine":46,"endColumn":26},{"ruleId":"411","severity":1,"message":"461","line":46,"column":28,"nodeType":"413","messageId":"414","endLine":46,"endColumn":47},{"ruleId":"411","severity":1,"message":"462","line":47,"column":10,"nodeType":"413","messageId":"414","endLine":47,"endColumn":25},{"ruleId":"411","severity":1,"message":"463","line":47,"column":27,"nodeType":"413","messageId":"414","endLine":47,"endColumn":45},{"ruleId":"411","severity":1,"message":"464","line":48,"column":10,"nodeType":"413","messageId":"414","endLine":48,"endColumn":22},{"ruleId":"411","severity":1,"message":"465","line":48,"column":24,"nodeType":"413","messageId":"414","endLine":48,"endColumn":39},{"ruleId":"411","severity":1,"message":"466","line":49,"column":10,"nodeType":"413","messageId":"414","endLine":49,"endColumn":22},{"ruleId":"411","severity":1,"message":"467","line":49,"column":24,"nodeType":"413","messageId":"414","endLine":49,"endColumn":39},{"ruleId":"411","severity":1,"message":"468","line":53,"column":10,"nodeType":"413","messageId":"414","endLine":53,"endColumn":22},{"ruleId":"411","severity":1,"message":"469","line":53,"column":24,"nodeType":"413","messageId":"414","endLine":53,"endColumn":39},{"ruleId":"411","severity":1,"message":"470","line":54,"column":10,"nodeType":"413","messageId":"414","endLine":54,"endColumn":25},{"ruleId":"411","severity":1,"message":"471","line":54,"column":27,"nodeType":"413","messageId":"414","endLine":54,"endColumn":45},{"ruleId":"411","severity":1,"message":"472","line":55,"column":10,"nodeType":"413","messageId":"414","endLine":55,"endColumn":27},{"ruleId":"411","severity":1,"message":"473","line":55,"column":29,"nodeType":"413","messageId":"414","endLine":55,"endColumn":49},{"ruleId":"411","severity":1,"message":"474","line":56,"column":10,"nodeType":"413","messageId":"414","endLine":56,"endColumn":26},{"ruleId":"411","severity":1,"message":"475","line":56,"column":28,"nodeType":"413","messageId":"414","endLine":56,"endColumn":47},{"ruleId":"411","severity":1,"message":"476","line":58,"column":10,"nodeType":"413","messageId":"414","endLine":58,"endColumn":29},{"ruleId":"411","severity":1,"message":"477","line":58,"column":31,"nodeType":"413","messageId":"414","endLine":58,"endColumn":53},{"ruleId":"411","severity":1,"message":"478","line":59,"column":10,"nodeType":"413","messageId":"414","endLine":59,"endColumn":25},{"ruleId":"411","severity":1,"message":"479","line":59,"column":27,"nodeType":"413","messageId":"414","endLine":59,"endColumn":45},{"ruleId":"411","severity":1,"message":"480","line":60,"column":10,"nodeType":"413","messageId":"414","endLine":60,"endColumn":26},{"ruleId":"411","severity":1,"message":"481","line":60,"column":28,"nodeType":"413","messageId":"414","endLine":60,"endColumn":47},{"ruleId":"411","severity":1,"message":"482","line":62,"column":10,"nodeType":"413","messageId":"414","endLine":62,"endColumn":29},{"ruleId":"411","severity":1,"message":"483","line":62,"column":31,"nodeType":"413","messageId":"414","endLine":62,"endColumn":53},{"ruleId":"411","severity":1,"message":"484","line":63,"column":10,"nodeType":"413","messageId":"414","endLine":63,"endColumn":25},{"ruleId":"411","severity":1,"message":"485","line":63,"column":27,"nodeType":"413","messageId":"414","endLine":63,"endColumn":45},{"ruleId":"411","severity":1,"message":"486","line":64,"column":10,"nodeType":"413","messageId":"414","endLine":64,"endColumn":27},{"ruleId":"411","severity":1,"message":"487","line":64,"column":29,"nodeType":"413","messageId":"414","endLine":64,"endColumn":49},{"ruleId":"411","severity":1,"message":"488","line":65,"column":10,"nodeType":"413","messageId":"414","endLine":65,"endColumn":30},{"ruleId":"411","severity":1,"message":"489","line":65,"column":32,"nodeType":"413","messageId":"414","endLine":65,"endColumn":55},{"ruleId":"411","severity":1,"message":"490","line":66,"column":10,"nodeType":"413","messageId":"414","endLine":66,"endColumn":26},{"ruleId":"411","severity":1,"message":"491","line":66,"column":28,"nodeType":"413","messageId":"414","endLine":66,"endColumn":47},{"ruleId":"411","severity":1,"message":"492","line":69,"column":10,"nodeType":"413","messageId":"414","endLine":69,"endColumn":24},{"ruleId":"411","severity":1,"message":"493","line":69,"column":26,"nodeType":"413","messageId":"414","endLine":69,"endColumn":43},{"ruleId":"411","severity":1,"message":"494","line":70,"column":10,"nodeType":"413","messageId":"414","endLine":70,"endColumn":23},{"ruleId":"411","severity":1,"message":"495","line":70,"column":25,"nodeType":"413","messageId":"414","endLine":70,"endColumn":41},{"ruleId":"411","severity":1,"message":"496","line":71,"column":10,"nodeType":"413","messageId":"414","endLine":71,"endColumn":22},{"ruleId":"411","severity":1,"message":"497","line":71,"column":24,"nodeType":"413","messageId":"414","endLine":71,"endColumn":39},{"ruleId":"411","severity":1,"message":"498","line":72,"column":10,"nodeType":"413","messageId":"414","endLine":72,"endColumn":22},{"ruleId":"411","severity":1,"message":"499","line":72,"column":24,"nodeType":"413","messageId":"414","endLine":72,"endColumn":39},{"ruleId":"411","severity":1,"message":"500","line":73,"column":10,"nodeType":"413","messageId":"414","endLine":73,"endColumn":19},{"ruleId":"411","severity":1,"message":"501","line":73,"column":21,"nodeType":"413","messageId":"414","endLine":73,"endColumn":33},{"ruleId":"411","severity":1,"message":"502","line":74,"column":10,"nodeType":"413","messageId":"414","endLine":74,"endColumn":21},{"ruleId":"411","severity":1,"message":"503","line":74,"column":23,"nodeType":"413","messageId":"414","endLine":74,"endColumn":37},{"ruleId":"411","severity":1,"message":"504","line":75,"column":10,"nodeType":"413","messageId":"414","endLine":75,"endColumn":23},{"ruleId":"411","severity":1,"message":"505","line":75,"column":25,"nodeType":"413","messageId":"414","endLine":75,"endColumn":41},{"ruleId":"411","severity":1,"message":"420","line":4,"column":8,"nodeType":"413","messageId":"414","endLine":4,"endColumn":17},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"425","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":14},{"ruleId":"411","severity":1,"message":"422","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":12,"column":8,"nodeType":"413","messageId":"414","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":29,"column":59,"nodeType":"419","endLine":29,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":45,"column":59,"nodeType":"419","endLine":45,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":62,"column":59,"nodeType":"419","endLine":62,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":121,"column":59,"nodeType":"419","endLine":121,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":137,"column":59,"nodeType":"419","endLine":137,"endColumn":73},{"ruleId":"411","severity":1,"message":"424","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":13},{"ruleId":"411","severity":1,"message":"425","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":14},{"ruleId":"411","severity":1,"message":"422","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":12,"column":8,"nodeType":"413","messageId":"414","endLine":12,"endColumn":16},{"ruleId":"417","severity":1,"message":"418","line":28,"column":59,"nodeType":"419","endLine":28,"endColumn":73},{"ruleId":"417","severity":1,"message":"418","line":41,"column":59,"nodeType":"419","endLine":41,"endColumn":73},{"ruleId":"411","severity":1,"message":"422","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":16},{"ruleId":"411","severity":1,"message":"423","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":16},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"506","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"507","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":11},{"ruleId":"411","severity":1,"message":"508","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":11},{"ruleId":"411","severity":1,"message":"509","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":12},{"ruleId":"510","severity":1,"message":"511","line":24,"column":33,"nodeType":"512","endLine":24,"endColumn":65},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"506","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"513","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":15},{"ruleId":"411","severity":1,"message":"514","line":11,"column":22,"nodeType":"413","messageId":"414","endLine":11,"endColumn":29},{"ruleId":"515","severity":1,"message":"516","line":12,"column":8,"nodeType":"517","endLine":12,"endColumn":10,"suggestions":"518"},{"ruleId":"411","severity":1,"message":"432","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":12},{"ruleId":"411","severity":1,"message":"519","line":5,"column":8,"nodeType":"413","messageId":"414","endLine":5,"endColumn":18},{"ruleId":"411","severity":1,"message":"513","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":15},{"ruleId":"411","severity":1,"message":"520","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":19},{"ruleId":"411","severity":1,"message":"521","line":6,"column":33,"nodeType":"413","messageId":"414","endLine":6,"endColumn":37},{"ruleId":"411","severity":1,"message":"432","line":10,"column":8,"nodeType":"413","messageId":"414","endLine":10,"endColumn":12},{"ruleId":"411","severity":1,"message":"424","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":13},{"ruleId":"411","severity":1,"message":"509","line":26,"column":8,"nodeType":"413","messageId":"414","endLine":26,"endColumn":12},{"ruleId":"411","severity":1,"message":"522","line":30,"column":13,"nodeType":"413","messageId":"414","endLine":30,"endColumn":15},{"ruleId":"411","severity":1,"message":"523","line":37,"column":12,"nodeType":"413","messageId":"414","endLine":37,"endColumn":18},{"ruleId":"411","severity":1,"message":"524","line":37,"column":20,"nodeType":"413","messageId":"414","endLine":37,"endColumn":29},{"ruleId":"411","severity":1,"message":"525","line":47,"column":12,"nodeType":"413","messageId":"414","endLine":47,"endColumn":23},{"ruleId":"411","severity":1,"message":"526","line":52,"column":12,"nodeType":"413","messageId":"414","endLine":52,"endColumn":25},{"ruleId":"411","severity":1,"message":"527","line":52,"column":27,"nodeType":"413","messageId":"414","endLine":52,"endColumn":43},{"ruleId":"411","severity":1,"message":"528","line":53,"column":12,"nodeType":"413","messageId":"414","endLine":53,"endColumn":29},{"ruleId":"411","severity":1,"message":"529","line":53,"column":31,"nodeType":"413","messageId":"414","endLine":53,"endColumn":51},{"ruleId":"411","severity":1,"message":"530","line":54,"column":12,"nodeType":"413","messageId":"414","endLine":54,"endColumn":26},{"ruleId":"411","severity":1,"message":"531","line":54,"column":28,"nodeType":"413","messageId":"414","endLine":54,"endColumn":45},{"ruleId":"411","severity":1,"message":"532","line":55,"column":12,"nodeType":"413","messageId":"414","endLine":55,"endColumn":30},{"ruleId":"411","severity":1,"message":"533","line":55,"column":32,"nodeType":"413","messageId":"414","endLine":55,"endColumn":53},{"ruleId":"411","severity":1,"message":"534","line":56,"column":12,"nodeType":"413","messageId":"414","endLine":56,"endColumn":23},{"ruleId":"411","severity":1,"message":"535","line":56,"column":25,"nodeType":"413","messageId":"414","endLine":56,"endColumn":39},{"ruleId":"411","severity":1,"message":"536","line":57,"column":12,"nodeType":"413","messageId":"414","endLine":57,"endColumn":26},{"ruleId":"411","severity":1,"message":"537","line":57,"column":28,"nodeType":"413","messageId":"414","endLine":57,"endColumn":45},{"ruleId":"411","severity":1,"message":"538","line":63,"column":15,"nodeType":"413","messageId":"414","endLine":63,"endColumn":24},{"ruleId":"515","severity":1,"message":"539","line":177,"column":8,"nodeType":"517","endLine":177,"endColumn":10,"suggestions":"540"},{"ruleId":"411","severity":1,"message":"541","line":6,"column":13,"nodeType":"413","messageId":"414","endLine":6,"endColumn":26},{"ruleId":"411","severity":1,"message":"421","line":1,"column":39,"nodeType":"413","messageId":"414","endLine":1,"endColumn":48},{"ruleId":"411","severity":1,"message":"542","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":21},{"ruleId":"411","severity":1,"message":"543","line":8,"column":21,"nodeType":"413","messageId":"414","endLine":8,"endColumn":31},{"ruleId":"411","severity":1,"message":"544","line":9,"column":12,"nodeType":"413","messageId":"414","endLine":9,"endColumn":22},{"ruleId":"411","severity":1,"message":"545","line":10,"column":21,"nodeType":"413","messageId":"414","endLine":10,"endColumn":31},{"ruleId":"411","severity":1,"message":"506","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"513","line":5,"column":8,"nodeType":"413","messageId":"414","endLine":5,"endColumn":15},{"ruleId":"411","severity":1,"message":"521","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":14},{"ruleId":"515","severity":1,"message":"546","line":14,"column":15,"nodeType":"547","endLine":34,"endColumn":6},{"ruleId":"515","severity":1,"message":"548","line":34,"column":8,"nodeType":"517","endLine":34,"endColumn":10,"suggestions":"549"},{"ruleId":"510","severity":1,"message":"511","line":41,"column":17,"nodeType":"512","endLine":41,"endColumn":100},{"ruleId":"411","severity":1,"message":"550","line":5,"column":5,"nodeType":"413","messageId":"414","endLine":5,"endColumn":24},{"ruleId":"411","severity":1,"message":"551","line":7,"column":5,"nodeType":"413","messageId":"414","endLine":7,"endColumn":14},{"ruleId":"515","severity":1,"message":"552","line":29,"column":8,"nodeType":"517","endLine":29,"endColumn":14,"suggestions":"553"},{"ruleId":"411","severity":1,"message":"554","line":9,"column":5,"nodeType":"413","messageId":"414","endLine":9,"endColumn":15},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"506","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"420","line":4,"column":8,"nodeType":"413","messageId":"414","endLine":4,"endColumn":17},{"ruleId":"411","severity":1,"message":"507","line":5,"column":8,"nodeType":"413","messageId":"414","endLine":5,"endColumn":11},{"ruleId":"411","severity":1,"message":"508","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":11},{"ruleId":"411","severity":1,"message":"509","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":12},{"ruleId":"411","severity":1,"message":"550","line":5,"column":5,"nodeType":"413","messageId":"414","endLine":5,"endColumn":24},{"ruleId":"411","severity":1,"message":"551","line":7,"column":5,"nodeType":"413","messageId":"414","endLine":7,"endColumn":14},{"ruleId":"515","severity":1,"message":"552","line":26,"column":8,"nodeType":"517","endLine":26,"endColumn":14,"suggestions":"555"},{"ruleId":"411","severity":1,"message":"554","line":9,"column":5,"nodeType":"413","messageId":"414","endLine":9,"endColumn":15},{"ruleId":"411","severity":1,"message":"534","line":16,"column":12,"nodeType":"413","messageId":"414","endLine":16,"endColumn":23},{"ruleId":"411","severity":1,"message":"535","line":16,"column":25,"nodeType":"413","messageId":"414","endLine":16,"endColumn":39},{"ruleId":"411","severity":1,"message":"556","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":11},{"ruleId":"411","severity":1,"message":"557","line":10,"column":11,"nodeType":"413","messageId":"414","endLine":10,"endColumn":17},{"ruleId":"411","severity":1,"message":"558","line":11,"column":12,"nodeType":"413","messageId":"414","endLine":11,"endColumn":21},{"ruleId":"411","severity":1,"message":"559","line":11,"column":23,"nodeType":"413","messageId":"414","endLine":11,"endColumn":35},{"ruleId":"411","severity":1,"message":"560","line":12,"column":12,"nodeType":"413","messageId":"414","endLine":12,"endColumn":20},{"ruleId":"411","severity":1,"message":"561","line":12,"column":22,"nodeType":"413","messageId":"414","endLine":12,"endColumn":33},{"ruleId":"515","severity":1,"message":"562","line":15,"column":20,"nodeType":"517","endLine":15,"endColumn":43},{"ruleId":"411","severity":1,"message":"421","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"506","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"415","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":16},{"ruleId":"411","severity":1,"message":"416","line":2,"column":18,"nodeType":"413","messageId":"414","endLine":2,"endColumn":23},{"ruleId":"411","severity":1,"message":"521","line":2,"column":25,"nodeType":"413","messageId":"414","endLine":2,"endColumn":29},"no-native-reassign",["563"],"no-negated-in-lhs",["564"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Container' is defined but never used.","'useEffect' is defined but never used.","'slideOne' is defined but never used.","'slideTwo' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.",["563"],["564"],["563"],["564"],"'ReactGA' is defined but never used.","'Navigation' is defined but never used.","'Hero' is defined but never used.","'Farmers' is defined but never used.","'FarmerList' is defined but never used.","'Farming' is defined but never used.","'ProcessingExport' is defined but never used.","'Journey' is defined but never used.","'Roasting' is defined but never used.","'EconomicsAndTransparency' is defined but never used.","'lotHistory' is assigned a value but never used.","'setLotHistory' is assigned a value but never used.","'pickedBy' is assigned a value but never used.","'setPickedBy' is assigned a value but never used.","'pickedCherriesWeight' is assigned a value but never used.","'setPickedCherriesWeight' is assigned a value but never used.","'datePicked' is assigned a value but never used.","'setDatePicked' is assigned a value but never used.","'variety' is assigned a value but never used.","'setVariety' is assigned a value but never used.","'pickerImage' is assigned a value but never used.","'setPickerImage' is assigned a value but never used.","'dePulpingVideo' is assigned a value but never used.","'setDePulpingVideo' is assigned a value but never used.","'catrachaIntakeImage' is assigned a value but never used.","'setSatrachaIntakeImage' is assigned a value but never used.","'milledOnDate' is assigned a value but never used.","'setMilledOnDate' is assigned a value but never used.","'miller' is assigned a value but never used.","'setMiller' is assigned a value but never used.","'lotCurrentWeight' is assigned a value but never used.","'setLotCurrentWeight' is assigned a value but never used.","'millingLocation' is assigned a value but never used.","'setMillingLocation' is assigned a value but never used.","'millingVideo' is assigned a value but never used.","'setMillingVideo' is assigned a value but never used.","'millingImage' is assigned a value but never used.","'setMillingImage' is assigned a value but never used.","'exportedFrom' is assigned a value but never used.","'setExportedFrom' is assigned a value but never used.","'greenExportDate' is assigned a value but never used.","'setGreenExportDate' is assigned a value but never used.","'greenExportWeight' is assigned a value but never used.","'setGreenExportWeight' is assigned a value but never used.","'greenExportVideo' is assigned a value but never used.","'setGreenExportVideo' is assigned a value but never used.","'greenImportLocation' is assigned a value but never used.","'setGreenImportLocation' is assigned a value but never used.","'greenImportDate' is assigned a value but never used.","'setGreenImportDate' is assigned a value but never used.","'greenImportImage' is assigned a value but never used.","'setGreenImportImage' is assigned a value but never used.","'intakeGreenLocation' is assigned a value but never used.","'setIntakeGreenLocation' is assigned a value but never used.","'intakeGreenDate' is assigned a value but never used.","'setIntakeGreenDate' is assigned a value but never used.","'intakeGreenWeight' is assigned a value but never used.","'setIntakeGreenWeight' is assigned a value but never used.","'intakeGreenCollector' is assigned a value but never used.","'setIntakeGreenCollector' is assigned a value but never used.","'intakeGreenVideo' is assigned a value but never used.","'setIntakeGreenVideo' is assigned a value but never used.","'roastingCounty' is assigned a value but never used.","'setRoastingCounty' is assigned a value but never used.","'roastingState' is assigned a value but never used.","'setRoastingState' is assigned a value but never used.","'roastingCity' is assigned a value but never used.","'setRoastingCity' is assigned a value but never used.","'cuppersNotes' is assigned a value but never used.","'setCuppersNotes' is assigned a value but never used.","'roastDate' is assigned a value but never used.","'setRoastDate' is assigned a value but never used.","'roasterName' is assigned a value but never used.","'setRoasterName' is assigned a value but never used.","'roastingImage' is assigned a value but never used.","'setRoastingImage' is assigned a value but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loading' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.farmer'. Either include it or remove the dependency array. If 'setFarmer' needs the current value of 'props.farmer', you can also switch to useReducer instead of useState and read 'props.farmer' in the reducer.","ArrayExpression",["565"],"'SearchForm' is defined but never used.","'HarvestList' is defined but never used.","'Link' is defined but never used.","'id' is assigned a value but never used.","'farmer' is assigned a value but never used.","'setFarmer' is assigned a value but never used.","'harvestLots' is assigned a value but never used.","'currentWeight' is assigned a value but never used.","'setCurrentWeight' is assigned a value but never used.","'currentWeightUnit' is assigned a value but never used.","'setCurrentWeightUnit' is assigned a value but never used.","'absorbedWeight' is assigned a value but never used.","'setAbsorbedWeight' is assigned a value but never used.","'absorbedWeightUnit' is assigned a value but never used.","'setAbsorbedWeightUnit' is assigned a value but never used.","'harvestDate' is assigned a value but never used.","'setHarvestDate' is assigned a value but never used.","'collectionDate' is assigned a value but never used.","'setCollectionDate' is assigned a value but never used.","'getTotals' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'farmers' and 'index'. Either include them or remove the dependency array.",["566"],"'setSearchTerm' is assigned a value but never used.","'useCallback' is defined but never used.","'setLoading' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setFarmers' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.harvestLot'. Either include it or remove the dependency array.",["567"],"'PaginationContainer' is defined but never used.","'Underline' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["568"],"'CardButton' is defined but never used.",["569"],"'L' is defined but never used.","'mapRef' is assigned a value but never used.","'longitude' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","Assignments to the 'position' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"576","fix":"578"},"Update the dependencies array to be: [props.farmer]",{"range":"579","text":"580"},"Update the dependencies array to be: [farmers, index]",{"range":"581","text":"582"},"Update the dependencies array to be: [props.harvestLot]",{"range":"583","text":"584"},"Update the dependencies array to be: [data, page]",{"range":"585","text":"586"},{"range":"587","text":"586"},[320,322],"[props.farmer]",[6782,6784],"[farmers, index]",[1337,1339],"[props.harvestLot]",[655,661],"[data, page]",[625,631]]